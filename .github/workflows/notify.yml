name: Notify Archive on Release

on:
  release:
    types:
     - published

  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publication'
        required: true
        default: 'test'
        type: choice
        options:
          - test
      branch:
        description: 'Branch to publish'
        required: true
        default: 'main'
      tag:
        description: 'Tag name (optional, leave empty except if you know what youâ€™re doing)'
        required: false

jobs:
  notify-archive:
    runs-on: ubuntu-latest

    steps:
      # Set up environment variables based on the event type
      - name: Set env for release
        if: github.event_name == 'release'
        run: |
          echo "TYPE=release" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV
          echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      # Set up environment variables based on the manual dispatch
      - name: Set env for manual/test
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "TYPE=${{ github.event.inputs.type }}" >> $GITHUB_ENV
          echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      # Checkout the repository
      - name: checkout repository
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      # Check given remote branch existence and dynamically sets the tag from package.json if not provided
      - name: Check if branch exists and set TAG if empty
        if: github.event_name == 'workflow_dispatch'
        run: |
          if ! git ls-remote --exit-code --heads origin "${{ env.BRANCH }}"; then
            echo "Branch '${{ env.BRANCH }}' does not exist on remote."
            exit 1
          fi
          if [ -z "${{ env.TAG }}" ]; then
            echo "TAG is empty, checkout branch."
            git checkout "${{ env.BRANCH }}"
            VERSION=$(jq -r .version package.json)
            echo "TAG=v${VERSION}" >> $GITHUB_ENV
          fi

      # Sends a POST request to trigger archive workflow
      - name: Send data to archive
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.DSFR_ARCHIVE_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/GouvernementFR/dsfr-archive/actions/workflows/collect.yml/dispatches \
            -d "{\"ref\":\"main\",\"inputs\":{\"type\":\"${{ env.TYPE }}\",\"branch\":\"${{ env.BRANCH }}\",\"tag\":\"${{ env.TAG }}\"}}"
