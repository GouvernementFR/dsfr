////
/// Table Module
/// @group Table
////

#{ns(table)} {
  caption {
    @include scheme-element-text-color(g800, true);
  }

  thead {
    td,
    th {
      @include scheme-element-border-color(g600, true, bottom, 0.125rem solid $COLOR);
      @include scheme-element-bg-color(beige);
      @include scheme-element-text-color(g700);
    }
  }

  tbody tr:nth-child(even) {
    @include scheme-element-bg-color(beige);
  }

  tbody tr:nth-child(odd) {
    @include scheme-element-bg-color(white);
  }

  /* Style bordered, enleve le style even/odd et ajoute des bordures entre chaque ligne */
  &--bordered {
    tbody {
      td,
      th {
        @include scheme-element-border-color(g400, true, bottom, 1px solid $COLOR);
      }

      tr {
        &:nth-child(odd),
        &:nth-child(even) {
          @include scheme-element-bg-color(t-plain);
        }
      }
    }
  }

  /*
  * Ombres ajoutées en Js si le contenu est plus grand que le conteneur
  */
  &--shadow {
    table {
      @include before {
        @include scheme-element-box-shadow-color(scroll-shadow, true, 'inset 0 0 0 transparent, inset 0 0 0 transparent');
      }
    }

    /**
    * Modifier ombre à gauche
    **/
    &-left {
      table {
        @include before('', block) {
          @include scheme-element-box-shadow-color(scroll-shadow, false, (inset space(8v) 0 space(4v) (-(space(6v))) $COLOR, inset 0 0 0 transparent));
        }
      }
    }

    /**
    * Modifier ombre à droite
    **/
    &-right {
      table {
        @include before('', block) {
          @include scheme-element-box-shadow-color(scroll-shadow, false, (inset 0 0 0 transparent, inset (-(space(8v))) 0 space(4v) (-(space(8v))) $COLOR));
        }
      }
    }

    /**
    * Modifier combinaison ombre à gauche et ombre à droite
    **/
    &-left#{&}-right {
      table {
        @include before('', block) {
          @include scheme-element-box-shadow-color(scroll-shadow, false, (inset space(8v) 0 space(4v) (-(space(6v))) $COLOR, inset (-(space(8v))) 0 space(4v) (-(space(6v))) $COLOR));
        }
      }
    }
  }
}
