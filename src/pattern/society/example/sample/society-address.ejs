<%
let society = locals.society || {};
const countries = JSON.parse(include('../../../address/example/sample/data/country.ejs'));

const data = {
  id: uniqueId('society-address'),
  label: getText('fieldset.address', 'society'),
  items: [
    {
      type: 'input',
      label: getText('label.denomination', 'society'),
      name: 'denomination',
      template: 'input',
    },
    {
      type: 'input',
      label: getText('label.address', 'address'),
      hint: getText('hint.address', 'address'),
      name: 'address',
      template: 'input',
    },
    {
      type: 'input',
      label: getText('label.complement', 'address') + ' ' + getText('label.optional', 'address'),
      hint: getText('hint.complement', 'address'),
      name: 'complement',
      template: 'input',
    },
    {
      type: 'input',
      label: getText('label.hamlet', 'address'),
      name: 'hamlet',
      template: 'input',
    },
    {
      type: 'input',
      inline: true,
      grow: true,
      modifier: 'postal',
      label: getText('label.postal', 'address'),
      name: 'postal',
      template: 'input',
    },
    {
      type: 'input',
      label: getText('label.city', 'address'),
      name: 'city',
      template: 'input',
    },
    {
      type: 'input',
      inline: true,
      grow: true,
      modifier: 'postal',
      label: getText('label.cedex', 'address'),
      name: 'cedex',
      disabled: true,
      template: 'input',
    },
    {
      type: 'select',
      template: 'select-group',
      disabled: true,
      name: 'country',
      label: getText('label.country', 'society'),
      placeholder: getText('option.placeholder', 'select'),
      options: countries.min
    },
  ]
}
%>

<%- include('../../template/ejs/society', {society: data}); %>