<%
let society = locals.society || {};
const options = JSON.parse(include('../../../address/example/data/countries-select-options.json.ejs', { countries: { minimal: true }}));

const data = {
  id: uniqueId('society-address'),
  label: getText('fieldset.address', 'society'),
  elements: [
    {
      type: 'input',
      base: 'input/input-base',
      data: {
        label: getText('label.denomination', 'society'),
        name: 'denomination'
      }
    },
    {
      type: 'input',
      base: 'input/input-base',
      data: {
        label: getText('label.address', 'address'),
        hint: getText('hint.address', 'address'),
        name: 'address'
      }
    },
    {
      type: 'input',
      base: 'input/input-base',
      data: {
        label: getText('label.complement', 'address') + ' ' + getText('label.optional', 'address'),
        hint: getText('hint.complement', 'address'),
        name: 'complement'
      }
    },
    {
      type: 'input',
      data: {
        label: getText('label.locality', 'address'),
        name: 'locality'
      }
    },
    {
      type: 'input',
      inline: true,
      grow: true,
      modifier: 'postal',
      data: {
        label: getText('label.postal', 'address'),
        name: 'postal'
      }
    },
    {
      type: 'input',
      data: {
        label: getText('label.city', 'address'),
        name: 'city',
      }
    },
    {
      type: 'input',
      inline: true,
      grow: true,
      modifier: 'postal',
      data: {
        label: getText('label.cedex', 'address'),
        name: 'cedex',
      }
    },
    {
      type: 'select',
      data: {
        name: 'country',
        label: getText('label.country', 'society'),
        placeholder: getText('option.placeholder', 'select'),
        options: options
      }
    }
  ]
}
%>

<%- include('./society-default', { society: data }); %>
