<%#
# paramètres name

* name (object, required) : objet contenant les paramètres

    ** name.id (string, required) : id du composant

    ** name.label (string, optionnal) : libellé du composant

    ** name.placeholder (string, optionnal) : placeholder du composant

    ** name.items (array, required) : tableau de données de chaque enfant du composant

        *** name.items[].type (string) : type de champs à ajouter au composant, si non défini, input
            **** input : champs de texte
            **** checkbox : case à cocher

        *** name.items[].value (string, optionnal) : valeur du champ

        *** name.items[].label (string, optionnal) : libellé du champ

        *** name.items[].hint (string, optionnal) : indice du champ

        *** name.items[].checked (string, optionnal) : attribut checked du champ

        *** name.items[].size (string, optionnal) : valeur de la taille du champ

        *** name.items[].kind (string, optionnal) : type de bouton

        *** name.items[].disabled (string, optionnal) : attribut disabled du champ

        *** name.items[].placeholder (string, optionnal) : attribut placeholder du champ de type select

        *** name.items[].options (array, optionnal) : attribut placeholder du champ de type select

        *** name.items[].attributes (string, optionnal) : attributs supplementaires du champ
%>
<% eval(include('../../../../core/index.ejs')); %>

<%
const name = locals.name || {};
const fieldset = {};
const elements = [];
if (name.items && name.items.length) {
    name.items.forEach((item, index) => {
        const type = item.type || 'input';
        const path = type === 'input' ? 'input/input-base' : type;
        elements.push({
            path: `${path}/template/ejs/${item.template}`,
            disabled: item.disabled || undefined,
            data: {
                [type]: {
                    id: `${name.id}-${index}`,
                    name: name.id,
                    label: item.label || '',
                    value: item.value || '',
                    hint: item.hint || '',
                    checked: item.checked || false,
                    size: item.size || '',
                    disabled: item.disabled || undefined,
                    attributes: item.attributes || {},
                    kind: item.kind || '',
                    options: item.options || [],
                    placeholder: item.placeholder || '',
                }
            }
        });
    });
}
fieldset.elements = elements;
fieldset.id = name.id;
fieldset.attributes = { 'aria-label': name.label,}
%>

<%- include('../../../../component/form/template/ejs/fieldset', {fieldset: fieldset}) %>
