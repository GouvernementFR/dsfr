<%
const civility = locals.civility || {};
const elements = [];

switch (civility.type) {
  case 'radio' :
    elements.push(...['honorific.doctor', 'honorific.inspector', 'no-answer'].map(key => {
      return {
        type: 'radio',
        data: {
          name: 'honorific',
          id: uniqueId('honorific'),
          label: getText(`option.${key}`, key === 'no-answer' ? 'radio' : 'civility')
        }
      };
    }));
    break;

  default:
    elements.push({
      type: 'select',
      data: {
        id: uniqueId('honorific'),
        name: 'honorific',
        label: getText('legend.honorific', 'civility'),
        placeholder: getText('option.placeholder', 'select'),
        options: ['honorific.rector', 'honorific.inspector', 'honorific.provisor', 'honorific.professor', 'honorific.doctor', 'honorific.principal', 'no-answer'].map((key, index )=> {
          return {
            value: index + 1,
            label: getText(`option.${key}`, key === 'no-answer' ? 'select' : 'civility')
          }
        })
      }
    });
}

const data = {
  id: uniqueId('honorific'),
  label: getText('sample.honorific', 'civility'),
  elements: elements
};

%>


<%- JSON.stringify(data); %>

