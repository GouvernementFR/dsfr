<%#
# paramètres link

* label (string, required) : contenu texte

* tag (string) : si non défini, a

* href (string, required) : adresse url du lien

* blank (bool, optional) : si true, target prend la valeur _blank, sinon _self

* disabled (boolean, optionnal) : si valeur true, link désactivé

* icon (string, optional) : icon du lien

%>
<% eval(include('../../../core/index.ejs')); %>

<%
let shareLinkClasses = locals.classes || [];
let shareLinkAttrs = locals.attributes || {};

const tag = locals.tag || 'a';

shareLinkClasses.push(prefix + '-share__link');

if (locals.icon !== undefined) shareLinkClasses.push(prefix + '-fi-' + locals.icon);

if (locals.disabled === true) {
    if (tag === 'button') shareLinkAttrs['disabled'] = '';
    if (tag === 'button' && shareLinkClasses.includes(prefix+'-share__link--copy') ||
        tag === 'button' && shareLinkClasses.includes(prefix+'-share__link--mail')) delete shareLinkAttrs.disabled;
} else if (tag === 'a') {
    shareLinkAttrs.href = locals.href || '[url - à modifier]';
    switch (true) {
        case locals.blank:
            shareLinkAttrs.target = '_blank';
            shareLinkAttrs.rel = 'noopener';
            break;

        case locals.self:
            shareLinkAttrs.target = '_self';
            break;
    }
}
%>

<<%= tag %> <%- includeClasses(shareLinkClasses)%> <%- includeAttrs(shareLinkAttrs); %>><%- label %></<%= tag %>>
