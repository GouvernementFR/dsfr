<%#
# paramètres Quote

* quote.size (string, optional): Taille du texte de citation

* quote.text (string, optional) : Texte de la citation

* quote.image (object, optional) : {img, alt} de l'image

* quote.href (string, optional): url du texte original cité

* quote.author (string, optional): Nom de l'auteur

* quote.accent (string, optional): Couleur d'accentuation

* quote.sources (array, optional): Tableau de textes de détail

%>

%>
<% eval(include('../../../../core/index.ejs')); %>

<%
let quote = locals.quote || {};
let size = quote.size || undefined;
let text = quote.text || '';
let image = quote.image || undefined;
let author = quote.author || false;
let href = quote.href || undefined;
let sources = quote.sources || [];
let quoteClasses = [prefix + '-quote'];
let citeAttr = [];
let sizeClasses = [];
const blockAttrs = {cite: href};

if (quote.accent !== undefined) quoteClasses.push(prefix + '-quote--' + quote.accent);
if (image) quoteClasses.push(prefix + '-quote--column');
if (size) sizeClasses = [prefix+'-text--'+size];
%>

<figure <%- includeClasses(quoteClasses) %>>
  <blockquote <%- includeAttrs(blockAttrs) %>>
    <p <%- includeClasses(sizeClasses) %>>« <%= text %> »</p>
  </blockquote>
  <figcaption>
    <% if (author) { %>
      <p class="<%= prefix %>-quote__author"><%= author %></p>
    <% } %>

    <% if (sources.length > 0) { %>
      <ul class="<%= prefix %>-quote__source">
      <% for (source in sources) { %>
        <li><%- sources[source] %></li>
      <% } %>
      </ul>
    <% } %>

    <% if (image) { %>
      <div class="<%= prefix %>-quote__image">
          <%- include('../../../../core/template/ejs/media/responsive-img.ejs', {media: image}); %>
      </div>
    <% } %>
  </figcaption>
</figure>
