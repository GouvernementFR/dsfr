////
/// Radios Schemes
/// @group radios
////

#{ns-group(radio)} {
  /**
   * On cache l'input de type radio pour le styler via le label
   */
  input[type="radio"] {
    /**
     * On applique les styles au pseudo élément before du label quand l'input présente
     * un état check
     */
    &:checked {
      + label {
        @include before {
          @include scheme-element-box-shadow-color(w, true, 'inset 0 0 0 5px $COLOR');
          @include scheme-element-bg-color(bf500, true);
          @include scheme-element-border-color(bf500, true);
        }
      }
    }

    /**
     * Mixins pour appliquer les styles correspondant au focus ainsi qu'à l'état disabled
     */
    @include disabled-form-choice();
  }

  /**
   * Modificateur pour la taille sm
   */
  &--sm {
    input[type="radio"] {
      &:checked + label {
        @include before {
          box-shadow: inset 0 0 0 3px var(--w);
        }
      }
    }
  }
}

#{ns(radio-rich)} {

  input[type="radio"] + #{ns(label)} {
    @include after {
      @include scheme-element-border-color(g300, true, left);
    }
  }

  input[type="radio"]:not(:checked) + label {
    @include scheme-element-box-shadow-color(g300, true, 'inset 0 0 0 1px $COLOR');
    @include scheme-element-bg-color(w, true);
  }

  input[type="radio"]:checked + label {
    @include scheme-element-bg-color(w, false);
    @include scheme-element-box-shadow-color(bf500, true, 'inset 0 0 0 1px $COLOR');

    @include before {
      box-shadow: inset 0 0 0 3px var(--w);
    }
  }

  input[type="radio"] {
    @include disabled-form-choice() {
      filter: grayscale(1);
      @include after {
        background-color: transparent;
      }
    }
  }
}
