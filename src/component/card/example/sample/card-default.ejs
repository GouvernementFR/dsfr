<%
const card = locals.card || {};
const href = card.href || '#'
const data = {
  content: {
    title: card.title || 'Intitulé de la carte (sur lequel se trouve le lien)',
    href: href,
  },
  id: card.id || uniqueId('card'),
  size: card.size,
  enlarge: card.enlarge !== false && card.footer === undefined,
  icon: card.icon,
  variations: card.variations
}

if (card.noLink) data.content.noLink = true;

if (card.horizontal) {
  const horizontal = {};

  switch (card.horizontal) {
    case 'half':
    case 'tier':
      horizontal.proportion = card.horizontal;
      break;
  }

  data.horizontal = horizontal;
}

if (card.img || card.vid) {
  data.header = {};

  switch (true) {
    case card.img !== undefined:
      data.header.img = { ...imgData('img/placeholder.16x9.png', 'unknown'), ...card.img};
      break;

    case card.vid !== undefined:
      data.header.vid = { ...vidData(), ...card.vid };
      break;
  }


  if (card.header && card.header.badges) {
    data.header.badgesGroup = { badges: [{ label: 'label badge'}]};
  }
}

if (card.content) {
  if (card.content.assess) data.content.assess = card.content.assess;
  if (card.content.downloadable) data.content.downloadable = card.content.downloadable;

  if (card.content.description !== false) data.content.description = card.content.description || lorem('', 160);

  if (card.content.badges) {
    data.content.badgesGroup = { badges: [...Array(2)].map(() => { return { label: 'label badge', accent: 'purple-glycine'}})};
  }

  if (card.content.tags) {
    data.content.tagsGroup = { tags: [...Array(2)].map(() => { return { label: 'label tag'}})};
  }


  if (card.content.details) {
    data.content.details = [];
    for (const detail of card.content.details) {
      const d = { label: 'détail (optionnel)'};
      if (typeof detail === 'string') {
        if (detail.indexOf('icon') > -1) d.icon = 'warning-fill';
        if (detail.indexOf('end') > -1) d.position = 'end';
        if (detail.indexOf('download') > -1) {
          d.label = 'PNG - 1,1 ko';
          d.position = 'end';
        }
      }
      data.content.details.push(d);
    }
  }
}

if (card.footer) {
  data.footer = {};
  const label = 'Label';
  if (card.footer.buttons) {
    data.footer.buttonsGroup = { buttons: [{label: label, kind: 2}, {label: label, kind: 1}], reverse: true, inline:'lg' }
  }
  if (card.footer.links) {
    data.footer.linksGroup = { links: [...Array(2)].map(() => { return { label: 'label', href: href, icon: 'arrow-right-line', iconPlace: 'right'}})};
  }
}

%>

<%- include('../../template/ejs/card', {card: data}); %>
