<%#
# paramètres password

* password.id (string, required) : id du mot de passe

* password.input (object, optional) : paramètres de l'input (voir composant input)

* password.checkbox (object, optional) : paramètres de la case à cocher afficher/masquer le mot de passe (voir composant checkbox)

* password.link (object, optional) paramètres du lien Mot de passe oublié
  ** password.link.href (string, required) : lien vers la page de récupération du mot de passe
  ** password.link.label (string, required) : libellé "Mot de passe oublié ?"
  ** password.link.attributes (object, optionnal) : Attributs supplémentaire sur le lien (ex: {target:'_blank'})

* password.attributes (object, optional) : attributs spécifiques à rajouter sur le mot de passe

* password.classes (array, optional) : classes spécifiques à rajouter sur le mot de passe

%>
<% eval(include('../../../../core/index.ejs')); %>

<%
const password = locals.password || {button:{}, input:{}}
const passwordClasses = [...password.classes || [], prefix + '-password'];
const attributes = password.attributes || {};
attributes.id = password.id;

const input = password.input || {};
input.id = password.id + '-input';
input.name = input.name || 'password';
input.classes = [...input.classes || [], prefix + '-password__input'];
input.labelClasses = [...input.labelClasses || [], prefix + '-password__label'];
input.type = 'password';
input.icon = true; // ajoute le wrapper pour l'icone capslock
input.required = true;
input.attributes = input.attributes || {};
if (password.format) input.attributes['aria-describedby'] = password.id + '-hint';

let checkbox = false;
if (password.checkbox) {
  checkbox = {...password.checkbox};
  checkbox.classes = checkbox.classes || [];
  checkbox.classes.push(prefix + '-password__checkbox');
  checkbox.label = checkbox.label || `${getText('show', 'password')}`;
  checkbox.id = checkbox.id || password.id + '-show';
  checkbox.size = 'sm';
  checkbox.attributes = checkbox.attributes || {};
  checkbox.attributes['aria-label'] = checkbox.attributes['aria-label'] || getText('show.long', 'password');
}

const link = password.link || {};
if (password.link) {
  link.label = link.label || getText('link.label', 'password');
  link.attributes = link.attributes || {};
  link.classes = link.classes || [];
  link.classes.push(prefix + '-link');
}
%>

<div <%- includeClasses(passwordClasses); %> <%- includeAttrs(attributes) %>>
  <%- include('../../../input/input-base/template/ejs/input.ejs', {input: input}); %>

  <% if (password.format) { %>
    <p class="<%= prefix %>-password__format" id="<%= password.id %>-hint">
      <% if (password.format.label) { %>
        <span class="<%= prefix %>-hint-text"><%- password.format.label %></span>
        <% for (let item of password.format.items) { %>
          <span class="<%= prefix %>-<%= item.state %>-text"><%= item.label %></span>
        <% } %>
      <% } %>
    </p>
  <% } %>

  <% if (checkbox) { %>
    <div class="<%= prefix %>-password__checkbox <%= prefix %>-checkbox-group <%= prefix %>-checkbox-group--sm">
      <%- include('../../../checkbox/template/ejs/checkbox.ejs', {checkbox: checkbox}); %>
    </div>
    <% } %>

  <% if (password.link) { %>
    <p>
      <a href="<%= link.href %>" <%- includeClasses(link.classes); %> <%- includeAttrs(link.attributes); %>><%= link.label %></a>
    </p>
  <% } %>
</div>
