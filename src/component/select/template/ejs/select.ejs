<%#
# paramètres select

* select.id (string, required) : id du label et du select, sert également à construire les ids des messages valid, error et hint

* select.label (string, required) : label

* select.options (array, required) : options du select, un array d'objets avec :
  * value : attribut value de l'option
  * label : label de l'option

* select.placeholder (string, optional) : text du placeholder du select

* select.valid (string, optional) : message de validation

* select.error (string, optional) : message d'erreur

* select.hint (string, optional) : message d'aide

* select.required (boolean, optional)

* select.disabled (boolena, optional)

* select.attributes (object, optional) : attributs spécifiques à rajouter sur le select

* select.classes (array, optional) : classes spécifiques à rajouter sur le select


%>
<% eval(include('../../../../core/index.ejs')); %>
<% eval(include('../../../form/template/ejs/message/builder.js')); %>

<%
let select = locals.select || {};

let classes = select.classes || [];
let attributes = select.attributes || {};
let describedby = [];
classes.push(`${prefix}-select`);

const label = {
    label: select.label,
    for: select.id,
    classes: select.labeClasses,
    attributes: select.labelAttributes,
}

const builder = new MessageBuilder(select.id);

if (select.valid) {
  builder.addValid(select.valid);
}
if (select.error) {
  builder.addError(select.error);
}
describedby.push(...builder.ids);

if (select.hint) {
    label.hint = select.hint;
}

if (describedby.length > 0) attributes['aria-describedby'] = describedby.join(' ');

if (select.required === true) attributes['required'] = '';
if (select.disabled === true) attributes['disabled'] = '';
%>

<%- include('../../../form/template/ejs/label', { label: label }); %>

<select <%- includeClasses(classes); %> <%- includeAttrs(attributes); %> id="<%= select.id %>" name="<%= select.name || select.id %>">
  <% if (select.placeholder != undefined) { %>
  <option value="" selected disabled hidden><%= select.placeholder %></option>
  <% } %>

  <%
  for (let i = 0; i < select.options.length; i++) {
    let option = select.options[i];
  %>
  <option value="<%= option.value %>"><%= option.label %></option>
  <% } %>
</select>

<%
if (select.valid || select.error) {
%>
  <%- include('../../../form/template/ejs/message/messages-group', { messagesGroup: builder.messagesGroup }); %>
<% } %>
