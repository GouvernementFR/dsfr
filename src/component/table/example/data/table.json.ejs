<%
const table = locals.table || {};
const col = table.col || 14;
const rows = table.rows || new Array(6);

const actionCellEmpty = `<span class="${prefix}-sr-only">${getText('data.cell.action.empty', 'table')}</span>`;
const textCell = `<div class="${prefix}-cell__desc">${getText('data.cell.text', 'table')}</div>`;
const titleCell = `<div class="${prefix}-cell__title">${getText('data.cell.title', 'table')}</div>`;

const data = {
  table: {
    caption: table.caption || undefined,
    col,
    rows,
  }
};

const checkboxCell = (checkbox) => include('../../../checkbox/template/ejs/checkbox-group.ejs', {checkbox});
const checkboxDefault = {
  id: uniqueId('table-select-checkbox'),
  attributes: {
      'aria-label': getText('data.cell.action.select', 'table'),
  },
  size: 'sm',
  includeEmptyMessagesGroup: false,
}
const checkboxSelectCol = {
  ...checkboxDefault,
  id: `${uniqueId('table-selectall-checkbox')}`,
  attributes: {
    'aria-label': getText('data.cell.action.selectAll', 'table'),
  },
}
const checkboxTitle = {
  ...checkboxDefault,
  id: uniqueId('table-title-checkbox'),
  attributes: {},
  label: getText('data.cell.title', 'table')
}
const buttonCell = (button) => include('../../../button/template/ejs/button.ejs', {button});
const tooltipCell = (id) => include('../../../button/template/ejs/button.ejs', {button: {
  label: getText('data.cell.text', 'table'),
  classes: [`${prefix}-btn--tooltip`],
  tooltip: {
    id,
    content: lorem(),
  }
}});
const iconCell = (name) => include('../../../../core/template/ejs/icon/icon.ejs', {icon: {name, size: 'sm'}});
const pictogramCell = (name) => include('../../../../core/template/ejs/artwork/pictogram.ejs', {pictogram: {name}});
const toggleCell = (id) => include('../../../toggle/template/ejs/toggle.ejs', {toggle: {id, label: '', inputAttr: {'aria-label': getText('data.cell.action.select', 'table')}}});
const badgeCell = include('../../../badge/template/ejs/badge.ejs', {badge: {type: 'warning', label: getText('data.cell.lable', 'table'), classes: [`${prefix}-mr-1v`]}});
const tagCell = include('../../../tag/template/ejs/tag.ejs', {tag:{type: 'clickable', href: '#', label: getText('data.cell.lable', 'table')}});
const downloadLinkCell = include('../../../link/template/ejs/link.ejs', {link:{download: true, href: '/example/img/image.jpg', label: getText('data.cell.download.lable', 'table'), detail: getText('data.cell.download.detail', 'table')}});

data.table.thead = [
  {
    attributes: {
      role: 'columnheader'
    },
    classes: [`${prefix}-cell__actionable`, `${prefix}-col__actionable--select`],
    content: checkboxCell(checkboxSelectCol)
  },
  {
    attributes: {
      role: 'columnheader'
    },
    classes: [`${prefix}-cell__actionable`, `${prefix}-cell__actionable--last__right`,  `${prefix}-cell__actionable--collapse`],
    content: actionCellEmpty
  },
  {
    content: textCell
  },
  {
    classes: [`${prefix}-col__lg`, `${prefix}-col__actionable--select`],
    content: checkboxCell(checkboxTitle)
  },
  {
    content: titleCell + textCell
  },
  {
    content: titleCell
  },
  {
    classes: [`${prefix}-col__actionable--select`],
    content: `<div class="${prefix}-cell__inline">${checkboxCell({...checkboxTitle, id: uniqueId('table-thead-checkbox'), checked: true})} ${textCell}</div>`
  },
  {
    classes: [`${prefix}-cell__center`],
    content: buttonCell({id: uniqueId('table-thead-sort-asc-desc'), label: `${getText('data.cell.action.sort', 'table')}`, classes: [`${prefix}-btn--sort`]})
  },
  {
    content: `<div class="${prefix}-cell__inline">${textCell} ${tooltipCell(uniqueId('table-thead-tooltip'))}</div>`
  },
  {
    classes: [`${prefix}-cell__sm`, `${prefix}-cell__center`],
    content: `${buttonCell({id: uniqueId('table-thead-sort-asc'), label: `${getText('data.cell.action.sort', 'table')}`, classes: [`${prefix}-btn--sort`], attributes: {'aria-sorting': 'asc'}})}</div>`
  },
  {
    classes: [`${prefix}-cell__sm`],
    content: toggleCell(uniqueId('table-thead-toggle'))
  },
  {
    content: textCell
  },
  {
    content: getText('data.cell.text', 'table')
  },
  {
    classes: [`${prefix}-col__actionable--select`],
    content: `<div class="${prefix}-cell__inline">${checkboxCell({...checkboxTitle, id: uniqueId('table-thead-checkbox-sortable')})} ${buttonCell({id: uniqueId('table-thead-sort-desc'), label: `${getText('data.cell.action.sort', 'table')}`, classes: [`${prefix}-btn--sort`, `${prefix}-ml-4v`], attributes: {'aria-sorting': 'desc'}})}</div>`
  },
  {
    classes: [`${prefix}-cell__sm`],
    content: iconCell('arrow-right-s-line')
  }
];

data.table.tbody = new Array(rows.length);
for(let r = 0; r < rows.length; r++) {
  const actionableCellClasses = [`${prefix}-cell__actionable`];
  const selectCellClasses = [...actionableCellClasses, `${prefix}-cell__actionable--select`];
  const collapseActionCellClasses = rows[r].collapse ? [...actionableCellClasses, `${prefix}-cell__actionable--last__right`] : [...actionableCellClasses, `${prefix}-cell__actionable--collapse`, `${prefix}-cell__actionable--last__right`];

  data.table.tbody[r] = [
    {
      classes: selectCellClasses,
      content:  checkboxCell({...checkboxDefault, id: `${uniqueId('table-select-checkbox')}--${r}`, attributes: {checked: rows[r].selected}})
    },
    {
      classes: collapseActionCellClasses,
      content: rows[r].expanded ? buttonCell({id: uniqueId('table-action-button'), label: `${getText('data.cell.action.expand', 'table')}`, classes:[`${prefix}-btn--expand`], attributes: {'aria-controls': `row-key-${r + 2}`, 'aria-expanded': `${rows[r].expanded}`}}) : actionCellEmpty
    },
    {
      content: getText('data.cell.text', 'table')
    },
    {
      content: badgeCell + getText('data.cell.text', 'table')
    },
    {
      content: badgeCell + titleCell + textCell
    },
    {
      content: getText('data.cell.text', 'table')
    },
    {
      content: badgeCell + titleCell + textCell
    },
    {
      content: getText('data.cell.text', 'table')
    },
    {
      content: titleCell
    },
    {
      classes: [`${prefix}-cell__sm`],
      content: getText('data.cell.number', 'table')
    },
    {
      classes: [`${prefix}-cell__sm`],
      content: badgeCell
    },
    {
      content: buttonCell({id: uniqueId('table-body-button'), label: getText('data.cell.action.button', 'table'), size: 'sm'})
    },
    {
      content: tagCell
    },
    {
      content: downloadLinkCell
    },
    {
      classes: [`${prefix}-cell__sm`],
      content: pictogramCell('leaf')
    }
  ];
}
%>

<%- JSON.stringify(data); %>