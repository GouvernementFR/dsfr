<%
const datatable = locals.datatable || {};
const col = datatable.col || 14;
const rows = datatable.rows || new Array(6);

const actionCellEmpty = `<span class="${prefix}-sr-only">${getText('data.cell.action', 'datatable')}</span>`;
const actionCell = `<span class="${prefix}-sr-only">${getText('data.cell.action', 'datatable')}</span>`;
const textCell = `<div class="${prefix}-datatable-cell__desc">${getText('data.cell.text', 'datatable')}</div>`;
const titleCell = `<span class="${prefix}-datatable-cell__title">${getText('data.cell.title', 'datatable')}</span>`;

const data = {
  id: uniqueId('datatable'),
  caption: datatable.caption || undefined,
  table: {
    col,
    rows,
  }
};

const checkboxCell = (checkbox) => include('../../../checkbox/template/ejs/checkbox-group.ejs', {checkbox: checkbox});
const checkboxDefault = {
  id: uniqueId('datatable-select-checkbox'),
  attributes: {
      'aria-label': getText('data.cell.select', 'datatable'),
  },
  size: 'sm',
  includeEmptyMessagesGroup: false,
}
const checkboxSelectCol = {
  ...checkboxDefault,
  id: `${uniqueId('datatable-selectall-checkbox')}`,
  attributes: {
    'aria-label': getText('data.cell.selectAll', 'datatable'),
  },
}
const checkboxTitle = {
  ...checkboxDefault,
  id: uniqueId('datatable-title-checkbox'),
  attributes: {},
  label: getText('data.cell.title', 'datatable')
}
const buttonCell = (id, icon) => include('../../../button/template/ejs/button.ejs', {button: {
    id,
    icon,
    kind: 4,
    size: 'sm',
    iconPlace: 'only'
  }
});
const tooltipCell = (id) => include('../../../button/template/ejs/button.ejs', {button: {
  label: getText('data.cell.text', 'datatable'),
  classes: [`${prefix}-btn--tooltip`],
  tooltip: {
    id,
    content: lorem(),
  }
}});
const iconCell = (name) => include('../../../../core/template/ejs/icon/icon.ejs', {icon: {name, size: 'sm'}});
const toggleCell = (id) => include('../../../toggle/template/ejs/toggle.ejs', {toggle: {id, label: ''}});
const badgeCell = include('../../../badge/template/ejs/badge.ejs', {badge: {type: 'warning', label: getText('data.cell.label', 'datatable')}});

data.table.thead = [
  {
    attributes: {
      role: 'columnheader'
    },
    content: checkboxCell(checkboxSelectCol)
  },
  {
    attributes: {
      role: 'columnheader'
    },
    content: actionCellEmpty
  },
  {
    content: textCell
  },
  {
    content: checkboxCell(checkboxTitle)
  },
  {
    content: titleCell + textCell
  },
  {
    content: titleCell
  },
  {
    content: `${checkboxCell({...checkboxTitle, id: uniqueId('datatable-thead-checkbox')})} ${textCell}`
  },
  {
    classes: [`${prefix}-datatable-cell__centered`],
    content: buttonCell(uniqueId('datatable-thead-dropdown'), 'menu-fill')
  },
  {
    content: getText('data.cell.text', 'datatable') + tooltipCell(uniqueId('datatable-thead-tooltip'))
  },
  {
    classes: [`${prefix}-datatable-cell__centered`],
    content: iconCell('arrow-right-line')
  },
  {
    content: toggleCell(uniqueId('datatable-thead-toggle'))
  },
  {
    content: getText('data.cell.text', 'datatable')
  },
  {
    classes: [`${prefix}-datatable-cell__schedulable`],
    content: `${checkboxCell({...checkboxTitle, id: uniqueId('datatable-thead-checkbox-schedulable')})} ${textCell} ${buttonCell(uniqueId('datatable-thead-schedulable'), 'menu-fill')}`
  },
  {
    content: iconCell('arrow-right-s-line')
  },
];

data.table.tbody = new Array(rows.length);
for(let r = 0; r < rows.length; r++) {
  const expandableIcon = rows[r].expandable && rows[r].expandable === 'openned' ? 'arrow-up-s-line' : 'arrow-down-s-line';

  data.table.tbody[r] = [
    {
      tag: 'th',
      attributes: {
        scope: 'row'
      },
      content: rows[r].expanded ? actionCellEmpty : checkboxCell({...checkboxDefault, id: `${uniqueId('datatable-select-checkbox')}--${r}`})
    },
    {
      content: rows[r].expandable ? buttonCell(uniqueId('datatable-action-button'), expandableIcon) : rows[r].expanded ? checkboxCell({...checkboxDefault, id: `${uniqueId('datatable-expanded-select-checkbox')}--${r}`}) : actionCellEmpty
    },
    {
      content: getText('data.cell.text', 'datatable')
    },
    {
      content: badgeCell + getText('data.cell.text', 'datatable')
    },
    {
      content: badgeCell + titleCell + textCell
    },
    {
      content: getText('data.cell.text', 'datatable')
    },
    {
      content: badgeCell + titleCell + textCell
    },
    {
      content: getText('data.cell.text', 'datatable')
    },
    {
      content: titleCell
    },
    {
      content: getText('data.cell.number', 'datatable')
    }
  ];
}

// data.table.data = new Array(row);
// for(let r = 0; r < row; r++) {
//   data.table.data[r] = new Array(col);

//   for(let c = 0; c < col; c++) {
//     switch (c) {
//       case 0:
//         const checkboxSelectRow = {
//           ...checkboxDefault,
//           id: `${uniqueId('datatable-select-checkbox')}--${r}`,
//         }
//         data.table.data[r][c] = checkboxCell(checkboxSelectRow);
//         break;
//       case 1:
//         data.table.data[r][c] = '';
//         break;
//       default:
//         data.table.data[r][c] = getText('data.cell.text', 'datatable');
//         break;
//     }
//   }
// }
%>

<%- JSON.stringify(data); %>