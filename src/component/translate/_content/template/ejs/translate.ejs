<%#
# paramètres header translate

* translate (object, optional) : Paramètres du sélecteur de langue
  ** translate.button (object, optional) : Paramètres du bouton du sélecteur de langue (ex: {kind:3} pour un btn tertiary)
  ** translate.collapseId (string, required) : Id du menu à controler
  ** translate.languages (array, required) : Tableau d'objets langues
    *** translate.languages[].name (string, required) : Nom de la langue dans son alphabet
    *** translate.languages[].locale (string, required) : Code de la langue en 2 caratères
    *** translate.languages[].active (boolean, required) : La langue qui apparait dans le bouton et en style active dans la liste (1 seule langue active)
%>
<%
const translate = locals.translate || {};
const collapseId = translate.collapseId || uniqueId('translate');
%>

<nav role="navigation" class="<%= prefix %>-translate <%= prefix %>-nav">
  <div class="<%= prefix %>-nav__item">
    <%
    const translateBtn = translate.button || {};
    const activeLanguage = translate.languages.find(lang => lang.active === true);
    translateBtn.label = activeLanguage.locale.toUpperCase() + `<span class="${prefix}-hidden-lg">&nbsp;- ` + activeLanguage.name + '</span>';
    const minBtnClasses = [`${prefix}-translate__btn`];
    const minBtnAttrs = {
      'aria-controls': collapseId,
      'aria-expanded': false,
      title: translateBtn.title || getText('button.title', 'translate')
    };
    translateBtn.classes = translateBtn.classes !== undefined ? translateBtn.classes.concat(minBtnClasses) : minBtnClasses;
    translateBtn.attributes = translateBtn.attributes !== undefined ? {...minBtnAttrs, ...translateBtn.attributes} : minBtnAttrs;
    %>

    <%- include('../../../button/template/ejs/button', {button:translateBtn}); %>

    <div class="<%= prefix %>-collapse <%= prefix %>-translate__menu <%= prefix %>-menu" id="<%= translate.collapseId %>">

        <%- include('languages.ejs', {languages: translate.languages}) %>
    </div>
  </div>
</nav>