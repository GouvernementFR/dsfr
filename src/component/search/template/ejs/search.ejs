<%#
# paramètres search

* search.id (string, required) : id de la barre de recherche

* search.placeholder (string, required) : text du placeholder de l'input

* search.size (string, optional) : modificateur de taille.
  valeurs:
  * lg : barre de recherche large

* search.input (object, optional) : paramètres de l'input

* search.button (object, optional) : paramètres du bouton de recherche

* search.attributes (object, optional) : attributs spécifiques à rajouter sur le search

* search.classes (array, optional) : classes spécifiques à rajouter sur le search

%>
<% eval(include('../../../../core/index.ejs')); %>

<%
let search = locals.search || {button:{}, input:{}}
let searchClasses = [...search.classes || [], prefix + '-search-bar'];
let attributes = search.attributes || {};
attributes.id = search.id;
attributes.role = "search";

let button = search.button || {};
button.span = true;

const input = search.input || {};
if (!input.id) input.id = search.id + '-input';

switch(search.size) {
case 'lg':
  searchClasses.push(prefix + '-search-bar--lg');
  break;
}
%>

<div <%- includeClasses(searchClasses); %> <%- includeAttrs(attributes) %>>
  <%- include('../../../input/input-base/template/ejs/input.ejs', {input:{...search.input, type: 'search'}}); %>
  <%- include('../../../button/template/ejs/button.ejs', {button: button}); %>
</div>
