<%#
# paramètres input

* input.id (string, required) : id du label et de l'input, sert également à construire les ids des messages valid, error et hint

* input.label (string, required) : label

* input.type (string, required) : type de l'input. si textarea, l'input est remplacé par un textarea

* input.placeholder (string, optional) : text du placeholder de l'input

* input.icon (string, optional) : nom de l'icone qui sera placée sur la partie droite de l'input

* input.valid (string, optional) : message de validation

* input.error (string, optional) : message d'erreur

* input.hint (string, optional) : message d'aide

* input.required (boolean, optional)

* input.disabled (boolean, optional)

* input.addon (boolean, optional) : Si true, input complexe composé d'un addon (ex: pour associer un bouton)

* input.button (object, optional) : attributs du bouton collé à l'input (si addon true)

* input.attributes (object, optional) : attributs spécifiques à rajouter sur l'input

* input.classes (array, optional) : classes spécifiques à rajouter sur l'input

%>
<% eval(include('../../../../core/index.ejs')); %>

<%
let input = locals.input || {};
let inputClasses = input.classes || [];
let inputAttrs = input.attributes || {};
let describedby = [];

inputClasses.push(prefix + '-input');

if (input.valid !== undefined) {
  inputClasses.push(prefix + '-input--valid');
  describedby.push(input.id + '-desc-valid');
}

if (input.error !== undefined) {
  inputClasses.push(prefix + '-input--error');
  describedby.push(input.id + '-desc-error');
}

if (input.hint === true) {
  describedby.push(input.id + '-hint-text');
  input.hint = undefined;
}

if (describedby.length > 0) inputAttrs['aria-describedby'] = describedby.join(' ');

if (input.required === true) inputAttrs['required'] = '';
if (input.disabled === true) inputAttrs['disabled'] = '';
if (input.placeholder != undefined) inputAttrs['placeholder'] = input.placeholder;
%>

<%- include('../../../form/template/ejs/label', {label: {id: input.id, label: input.label, hint: input.hint}}); %>

<% if (input.icon != undefined) { %>
 <div class="<%= prefix %>-input-wrap <%- prefix %>-icon-<%= input.icon %>" >
<% } %>

<% if (input.addon && input.button != undefined) { %>
  <div class="<%= prefix %>-input-wrap <%- prefix %>-input-wrap--addon" >
<% } %>

<% if (input.type === 'textarea') { %>
<textarea <%- includeClasses(inputClasses); %> <%- includeAttrs(inputAttrs); %>  id="<%= input.id %>" name="<%= input.id %>"></textarea>
<% }
else {%>
<input <%- includeClasses(inputClasses); %> <%- includeAttrs(inputAttrs); %> type="<%= input.type %>" id="<%= input.id %>" name="<%= input.id %>">
<% } %>

<% if (input.addon && input.button != undefined) { %>
  <%- include('../../../button/template/ejs/button', {button:input.button}); %>
  </div>
<% } %>

<% if (input.icon != undefined) { %>
</div>
<% } %>

<%- include('../../../form/template/ejs/message', {message:input}); %>
