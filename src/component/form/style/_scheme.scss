////
/// form Scheme
/// @group form
////

@use 'module/color';
@use 'module/disabled';

@mixin _form-scheme($legacy: false) {
  #{ns(label)} {
    @include color.text(label grey, (legacy:$legacy));

    &--error {
      @include color.text(default error, (legacy:$legacy));
    }

    &--success {
      @include color.text(default success, (legacy:$legacy));
    }

    &--info {
      @include color.text(default info, (legacy:$legacy));
    }
  }

  #{ns(hint-text)} {
    @include color.text(mention grey, (legacy:$legacy));
  }

  #{ns(error-text)} {
    @include color.text(default error, (legacy:$legacy));
  }

  #{ns(valid-text)} {
    @include color.text(default success, (legacy:$legacy));
  }

  #{ns(info-text)} {
    @include color.text(default info, (legacy:$legacy));
  }

  #{ns(fieldset)} {
    @include disabled.selector {
      label {
        @include disabled.colors((legacy: $legacy, text: true));
      }
    }

    &__legend {
      @include color.text(title grey, (legacy:$legacy));
    }

    &--error {
      #{ns(fieldset__content)} {
        @include before {
          @include color.box-shadow(plain error, (legacy:$legacy), left-2-in);
        }
      }

      label {
        @include color.text(default error, (legacy:$legacy));
      }
    }

    &--valid {
      #{ns(fieldset__content)} {
        @include before {
          @include color.box-shadow(plain success, (legacy:$legacy), left-2-in);
        }
      }

      label {
        @include color.text(default success, (legacy:$legacy));
      }
    }

    &--info {
      #{ns(fieldset__content)} {
        @include before {
          @include color.box-shadow(plain info, (legacy:$legacy), left-2-in);
        }
      }

      label {
        @include color.text(default info, (legacy:$legacy));
      }
    }
  }

  #{ns(control)} {
    &--disabled {
      #{ns(label)} {
        @include disabled.colors((legacy: $legacy, text: true));
      }
    }
  }
}
