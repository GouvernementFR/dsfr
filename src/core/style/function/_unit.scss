////
/// Core Function : units
/// @group core
////

@use "sass:math";

/// Retourne la valeur numérique sans unité.
/// @access public
/// @param {String} $value - la valeur avec unité
/// @example
///   clean-unit(12px);
@function clean-unit($value) {
  @if $value == null {
    @return null;
  }
  @return math.div($value, $value * 0 + 1);
}

/// Return rem from px
///
/// @param {String} $px - Font size in pixels
/// @param {String} $root-font-size [$base-font-size-px] - Pixel font size for conversion
///
/// @example scss - Get 1rem conversion from 16px, using $base-font-size-px
///   .foo {
///     font-size: px-rem(12px);
///   }
@function px-rem($px, $root-font-size: 16px) {
  @return clean-unit(math.div($px, $root-font-size)) * 1rem;
}

@function is-unit($value, $unit) {
  @return math.unit($value) == $unit;
}

@function is-basic-unit($value) {
  $units: em ex '%' px cm mm in pt pc ch rem vw vh vmin vmax;
  @each $unit in $units {
    @if is-unit($value, $unit) {
      @return true;
    }
  }
  @return false;
}
