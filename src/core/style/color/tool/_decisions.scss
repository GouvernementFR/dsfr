////
/// Core Tools : Color decisions
/// @group schemes
////

@mixin build-decisions($with-theme: false) {
  $options: ();
  $decisions: ();
  @each $context, $uses in $scheme-decisions {
    @each $use, $families in $uses {
      @each $family, $shade in $families {
        @each $tint, $shades in map-get($scheme-sets, $family) {
          @if map-has-key($shades, $shade) {
            $set: _get-scheme-set-by-shade($shade, $family, $tint);
            $value: _get-color-from-set($set, light, hex);
            @if $with-theme {
              $value: var(--#{_get-set-prop(map-get($shades, $shade))});
            }

            $token: (context: $context, use: $use, tint: $tint);

            #{_get-decision-prop($token)}: $value;

            @if $context == background {
              $option: nth($set, 1);
              $blend: _get-blend-hsl-color($option, light);
              @if $with-theme {
                $blend: var(--#{_get-set-prop(map-get($shades, $shade))}-blend);
              }

              #{_get-decision-prop($token)}-blend: $blend;
            }
          }
        }
      }
    }
  }
}
