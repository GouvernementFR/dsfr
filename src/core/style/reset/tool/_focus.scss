////
/// Core Tool : Reset focus
/// @group core
////

@mixin _enabled ($is-enabled) {
  @if $is-enabled {
    &:enabled {
      @content;
    }
  }
  @else {
    @content;
  }
}

@mixin _build-focusable($settings) {
  $focus: '&';
  $hover: '&';
  $no-focus: map-get($settings, no-focus);

  @if map-has-key($settings, focus) {
    $focus: map-get($settings, focus);
  }

  @if map-has-key($settings, hover) {
    $hover: map-get($settings, hover);
  }

  @at-root #{map-get($settings, selector)} {
    @if $no-focus != true {
      #{$focus} {
        outline-offset: 2px;
        outline-width: 2px;
        outline-color: $focus-color;
      }

      &:focus {
        #{$focus} {
          outline-style: solid;
        }
      }

      &:focus:not(:focus-visible) {
        #{$focus} {
          outline-style: none;
        }
      }

      &:focus-visible {
        #{$focus} {
          outline-style: solid;
        }
      }
    }

    @if map-has-key($settings, cursor) {
      @include _enabled(map-get($settings, enabled)) {
        #{$hover} {
          cursor: #{map-get($settings, cursor)};
        }
      }
    }

    @if map-has-key($settings, disabled) {
      $disabled: map-get($settings, disabled);

      #{map-get($disabled, selector)} {
        @if $no-focus != true {
          #{$focus} {
            outline-style: none;
          }
        }

        @if map-has-key($disabled, cursor) {
          #{$hover} {
            cursor: #{map-get($disabled, cursor)};
          }
        }
      }
    }
  }
}

@mixin build-focus($settings: $focus-settings) {
  @each $focusable, $focusable-settings in $settings {
    @include _build-focusable($focusable-settings);
  }
}
