////
/// Core Tool : Icon
/// @group core
////

/// Return icon size from map
/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)
///
/// @example scss - Set icon size to `SM` (12px)
///   .foo {
///     width: icon-size(sm);
///     height: icon-size(sm);
///   }
@function icon-size($size: md) {
  @return px-rem(map-get($icon-size-map, $size));
}

@mixin icon-size($size:md) {
  width: #{icon-size($size)};
  height: #{icon-size($size)};
}

@mixin with-icon($size:md) {
  @include has-icon {
    @include before {
      @if $size != md {
        @include icon-size($size);
      }
      @content;
    }
  }
}

@mixin generate-icons($base, $deprecated: false) {
  $icons-settings: $icons-settings;
  @if $deprecated {
    $icons-settings: $icons-settings-deprecated;
  }
  @each $icon, $setting in $icons-settings {
    #{ns($base + '-' + $icon)} {
      @include icon-content($icon, $deprecated);
    }
  }
}

// @function icon-glyph($icon, $deprecated: false, $is-ligature: false) {
//   $icon-settings: map-get($icons-settings, $icon);
//   @if is-deprecated($icon) or $deprecated {
//     $icon-settings: map-get($icons-settings-deprecated, $icon);
//   }
//   @if $is-ligature {
//     @return '#{map-get($icon-settings, ligature)}';
//   }
//   @else {
//     @return '#{map-get($icon-settings, codepoint)}';
//   }
// }

@function is-deprecated($icon) {
  @return not map-has-key($icons-settings, $icon);
}

@function get-icons-settings-version($deprecated: false) {
  @if $deprecated {
    @return $icons-settings-deprecated;
  }
  @else {
    @return $icons-settings;
  }
}

@mixin icon-content($icon, $pseudo: null) {
  $deprecated: is-deprecated($icon);
  $icon-path: '#{$dist-path}icons/svg/';
  @if $deprecated {
    $icon-path: '#{$dist-path}icons/deprecated/svg/';
  }
  $selector: null;
  @if $pseudo == before or $pseudo == after {
    $selector: '&::#{$pseudo}';
  }
  @include nest($selector) {
    --icon-path: url('#{$icon-path}#{$icon}.svg') !important;
  }
}

// @function font-icon($size: md, $deprecated: false) {
//   $font-weight: normal;
//   @if $deprecated {
//     $font-weight: 700;
//   }
//   @return normal $font-weight normal #{icon-size($size)}/1 #{$namespace}-icon;
// }


@mixin icon-style {
  content: '';
  flex: 0 0 auto;
  display: inline-block;
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  vertical-align: top;
  background-color: currentColor;
  -webkit-mask-image: var(--icon-path);
  mask-image: var(--icon-path);
}

@mixin icon($icon: null, $size: md, $pseudo: before) {
  @if $icon != null {
    @include icon-content($icon);
  }

  @include _pseudo($pseudo) {
    $deprecated: is-deprecated($icon);
    @include icon-style;
    @if $size != null {
      @include icon-size($size);
    }

    @content;
  }
}
