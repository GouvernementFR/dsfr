////
/// Core Tool : Icon
/// @group core
////

/// Return icon size from map
/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)
///
/// @example scss - Set icon size to `SM` (12px)
///   .foo {
///     width: icon-size(sm);
///     height: icon-size(sm);
///   }
@function icon-size($size: md) {
  @return px-rem(map-get($icon-size-map, $size));
}

@mixin icon-size($size:md) {
  font-size: #{icon-size($size)} !important;
}

@mixin with-icon($size:md) {
  @include has-icon {
    @include before {
      @if $size != md {
        @include icon-size($size);
      }
      @content;
    }
  }
}

@mixin generate-icons($base, $deprecated: false) {
  $icons-settings: $icons-settings;
  @if $deprecated {
    $icons-settings: $icons-settings-deprecated;
  }
  @each $icon, $setting in $icons-settings {
    #{ns($base + '-' + $icon)} {
      @include before(icon-glyph($icon, $deprecated));
      @if is-deprecated($icon) {
        @include before {
          font-weight: 700;
        }
      }
    }
  }
}

@function icon-glyph($icon, $deprecated: false, $is-ligature: false) {
  $icon-settings: map-get($icons-settings, $icon);
  @if is-deprecated($icon) or $deprecated {
    $icon-settings: map-get($icons-settings-deprecated, $icon);
  }
  @if $is-ligature {
    @return '#{map-get($icon-settings, ligature)}';
  }
  @else {
    @return '#{map-get($icon-settings, codepoint)}';
  }
}

@function is-deprecated($icon) {
  @return not map-has-key($icons-settings, $icon);
}

@function get-icons-settings-version($deprecated: false) {
  @if $deprecated {
    @return $icons-settings-deprecated;
  }
  @else {
    @return $icons-settings;
  }
}

@mixin icon-content($icon) {
  content: icon-glyph($icon);

  @if is-deprecated($icon) {
    font-weight: 700;
  }
  @else {
    font-weight: 400;
  }
}

@function font-icon($size: md, $deprecated: false) {
  $font-weight: normal;
  @if $deprecated {
    $font-weight: 700;
  }
  @return normal $font-weight normal #{icon-size($size)}/1 #{$namespace}-icon;
}

@mixin font-icon($size: md, $deprecated: false) {
  font: font-icon($size, $deprecated);
}

@mixin icon($icon: null, $size: md, $pseudo: before) {
  @include _pseudo($pseudo) {
    @if $size != null {
      $deprecated: is-deprecated($icon);
      @include font-icon($size, $deprecated);
    }

    @if $icon != null {
      @include icon-content($icon);
    }

    @content;
  }
}
