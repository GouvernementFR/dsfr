////
/// Core Module : Spacing
/// @group tools
////

@function _spacing-name($prop: margin, $side:top, $value:1, $unit: null, $breakpoint: null) {
  $start: str_slice($prop, 1, 1);

  @if $side != null {
    $start: '#{str_slice($prop, 1, 1)}#{str_slice($side, 1, 1)}';
  }

  $middle: '';

  @if $breakpoint != null {
    $middle: '#{$breakpoint}-';
  }

  $end: quote(str-replace($value, '.', '-'));

  @if type-of($value) == 'number' and $value < 0 {
    $end: 'n' + quote(str-replace(abs($value), '.', '-'));
  }

  @if $value != 0 and $unit != null {
    $end: '#{$end}#{$unit}';
  }

  $selector: '#{$start}-#{$middle}#{$end}';

  @return $selector;
}

@function _spacing-selectors($prop, $side, $value, $breakpoint) {
  @if type-of($value) != 'number' {
    @return '#{ns(_spacing-name($prop, $side, $value, null, $breakpoint))}';
  }

  $w: null;
  @if (abs($value) % 2) == 0 and $value != 0 {
    $w: abs($value) / 2;
  }

  $selectors:'#{ns(_spacing-name($prop, $side, $value, v, $breakpoint))}';

  @if $w != null {
    $selectors: '#{$selectors},#{ns(_spacing-name($prop, $side, $value / 2, w, $breakpoint))}';
  }

  @return $selectors;
}

@mixin _spacing-property-variations($prop:margin, $value:1, $breakpoint: null) {
  $v: $value;

  @if type-of($value) == 'number' {
    $v: space('#{$value}v') !important;
  }

  #{_spacing-selectors($prop, null, $value, $breakpoint)} {
    #{$prop}: $v;
  }

  @each $dir, $sides in (x:left right, y: top bottom) {
    @each $side in $sides {
      #{_spacing-selectors($prop, $side, $value, $breakpoint)},
      #{_spacing-selectors($prop, $dir, $value, $breakpoint)} {
        #{$prop}-#{$side}: $v;
      }
    }
  }
}

@mixin _spacing-properties($prop, $settings, $breakpoint:null) {
  $active: map_get($settings, active);
  $from: map_get($settings, from);
  $half: map_get($settings, half);
  $through: map_get($settings, through);
  $specials: map_get($settings, special);

  @if $active != false {
    @for $i from $from through $through {
      @include _spacing-property-variations($prop, $i, $breakpoint);
      // ajoute 0.5v & 1.5v et -0.5v & -1.5v ($half=2)
      @if $i > -$half and $i < $half {
        @if $i <= 0 {
          @include _spacing-property-variations($prop, $i - 0.5, $breakpoint);
        }
        @if $i >= 0 {
          @include _spacing-property-variations($prop, $i + 0.5, $breakpoint);
        }
      }
    }

    @each $special in $specials {
      @include _spacing-property-variations($prop, $special, $breakpoint);
    }
  }
}

@mixin create-spacing-properties($settings) {
  @each $prop, $setting in $settings {
    @include _spacing-properties($prop, $setting);

    @if map_has_key($setting, breakpoints) {
      @each $breakpoint in map_get($setting, breakpoints) {
        @include respond-from($breakpoint) {
          @include _spacing-properties($prop, $setting, $breakpoint);
        }
      }
    }
  }
}
