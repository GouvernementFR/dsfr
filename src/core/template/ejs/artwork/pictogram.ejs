<%#
# paramètres pictogram

* pictogram.name (string, required): nom du pictogramme

* pictogram.accent (string, optional): couleur d'accentuation (ex: green-emeraude)

* pictogram.size (string, optional): épaisseur du pictogramme (sm, lg)

* pictogram.classes (array, optional): classes supplémentaires

%>
<% eval(include('../../../index.ejs')); %>
<%
  const pictograms = JSON.parse(include('../../../../../.config/pictogram.json'));

  const pictogram = locals.pictogram || {} ;
  let classes = pictogram.classes || [];
  let width, height;
  classes.push(prefix + '-artwork');
  if (pictogram.accent) classes.push(prefix + '-artwork--' + pictogram.accent);
  const category = pictograms.filter(p => p.name === pictogram.name)[0].category;
  if (pictogram.size && pictogram.size !== 'md') classes.push(prefix + '-artwork--' + pictogram.size);
  switch (pictogram.size) {
    case 'sm':
      width = height = 40;
      break;

    case 'lg':
      width = height = 120;
      break;

    default:
      width = height = 80;
      break;
  }
%>

<svg aria-hidden="true" <%- includeClasses(classes) %> viewBox="0 0 80 80" width="<%= width %>" height="<%= height %>" >
  <use class="<%= prefix %>-artwork-decorative" href="<%= relativeRoot %>dist/artwork/pictograms/<%= category %>/<%= pictogram.name %>.svg#artwork-decorative"></use>
  <use class="<%= prefix %>-artwork-minor" href="<%= relativeRoot %>dist/artwork/pictograms/<%= category %>/<%= pictogram.name %>.svg#artwork-minor"></use>
  <use class="<%= prefix %>-artwork-major" href="<%= relativeRoot %>dist/artwork/pictograms/<%= category %>/<%= pictogram.name %>.svg#artwork-major"></use>
</svg>
