////
/// Tab module : Shadow
/// @group Tab
////

@use '../../../../../../../sass/elevation';
@use '../../../../../../../sass/selector';
@use '../../../../../../../sass/spacing';

@mixin first() {
  /*
* Ombres ajoutées en Js si le contenu est plus grand que le conteneur
*/
  #{selector.class(tabs, (element: shadow))} {
    --tab-list-height: #{space(12v)};

    #{selector.class(tabs, (element: list, combine: child))} {
      @include selector.before('', block) {
        @include spacing.absolute(4px, 0, null, 0);
        @include elevation.z-index(above);
        @include _tabs-scroll-shadow(false, false);
        @include spacing.height(calc(var(--tab-list-height) - 8px));
        opacity: 0.8;
        pointer-events: none;
        transition: box-shadow 0.3s;
      }
    }

    /**
  * Modifier ombre à gauche
  **/
    &--left {
      #{selector.class(tabs, (element: list, combine: child))} {
        @include selector.before {
          @include _tabs-scroll-shadow(
              true,
              false
          ); // @TODO: à implementer dans la mixin shadow
        }
      }
    }

    /**
  * Modifier ombre à droite
  **/
    &--right {
      #{selector.class(tabs, (element: list, combine: child))} {
        @include selector.before {
          @include _tabs-scroll-shadow(
            false,
            true
          ); // @TODO: à implementer dans la mixin shadow
        }
      }
    }

    /**
  * Modifier combinaison ombre à gauche et ombre à droite
  **/
    &--left#{&}--right {
      #{selector.class(tabs, (element: list, combine: child))} {
        @include selector.before {
          @include _tabs-scroll-shadow(
              true,
              true
          ); // @TODO: à implementer dans la mixin shadow
        }
      }
    }
  }

  @include selector.theme(dark) {
    #{selector.class(tabs, (element: shadow))} {
      #{selector.class(tabs, (element: list, combine: child))} {
        @include selector.before {
          opacity: 1;
        }
      }
    }
  }
}
