////
/// Button Legacy
/// @group button
////

@use '../../../../../../sass/legacy';
@use '../../../../../../sass/icon';
@use '../../../../../../sass/selector';
@use '../../../../../../sass/typography';

@mixin first() {
  #{selector.class(btn)} {
    @include icon.icon-legacy(null, sm);

    @include selector.not-start(btn, (modifier: icon-)) {
      @include icon.selector {
        @include icon.icon-legacy(null, md);
      }
    }

    &--sm {
      @include icon.icon-legacy(null, xs);

      @include selector.not-start(btn, (modifier: icon-)) {
        @include icon.selector {
          @include icon.icon-legacy(null, sm);
        }
      }
    }

    &--lg {
      @include icon.icon-legacy(null, md);

      @include selector.not-start(btn, (modifier: icon-)) {
        @include icon.selector {
          @include icon.icon-legacy(null, lg);
        }
      }
    }
  }

  #{selector.class(btn, (modifier: close))} {
    @include icon.icon-legacy(close-line, sm);
  }

  #{selector.class(btn, (modifier: fullscreen))} {
    @include icon-legacy(fullscreen-line, sm);
  }

  #{selector.class(btn, (modifier: display))} {
    @include icon.icon-legacy(theme-fill, sm);
  }

  #{selector.class(btns, (group: true))} {
    @include typography.disable-list-style-legacy(true);

    &--sm {
      @include selector.not-start(btns, (group: true, modifier: icon-)) {
        #{selector.class(btn)} {
          @include icon.selector {
            @include icon.icon-legacy(null, sm);
          }
        }
      }
    }

    &--lg {
      @include selector.not-start(btns, (group: true, modifier: icon-)) {
        #{selector.class(btn)} {
          @include icon.selector {
            @include icon.icon-legacy(null, lg);
          }
        }
      }
    }
  }
}
