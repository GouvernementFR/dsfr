<%#
# paramètres link

* label (string, required) : contenu texte

* tag (string) : si non défini, a

* href (string, required) : adresse url du lien

* blank (bool, optional) : si true, target prend la valeur _blank, sinon _self

* disabled (boolean, optionnal) : si valeur true, link désactivé

* icon (string, optional) : icon du lien

* iconPlace (string, optionnal) : emplacement de l'icone
  si non défini alors que le paramètre icon est défini, bouton avec icone seule, sans label
  valeurs :
  * left : icone à gauche du label
  * right : icone à droite du label

%>

<%
 let linkClasses = locals.classes || [];
 let linkAttrs = locals.attributes || {};

 const tag = locals.tag || 'a';

 linkClasses.push(prefix + '-link');

 if (locals.disabled === true) linkAttrs['disabled'] = '';

 switch(locals.size) {
     case 'sm':
         linkClasses.push(prefix + '-link--sm');
       break;

     case 'lg':
         linkClasses.push(prefix + '-link--lg');
         break;
 }

 if (locals.icon !== undefined) linkClasses.push(prefix + '-fi-' + locals.icon);

 if (locals.iconPlace !== undefined) switch(locals.iconPlace)
 {

     case 'left':
         linkClasses.push(prefix + '-link--icon-left');
         break;

     case 'right':
         linkClasses.push(prefix + '-link--icon-right');
         break;
 }

 linkAttrs.target = locals.blank === true ? '_blank' : '_self';
 if (tag === 'a') linkAttrs.href = locals.href || '#';

 %>

<<%= tag %> <%- includeClasses(linkClasses)%> <%- includeAttrs(linkAttrs); %>><%- label %></<%= tag %>>
