////
/// Schemes Tools : Data URI SVG
/// @group schemes
////

/// Combinaison de couleur appliquée à un svg intégré en data-uri
/// @access public
/// @param {String}  $set-name - nom de la combinaison comme défini dans settings/sets
/// @param {Object} $value - le SVG en data-uri
/// @param {String} $prop - propriété sur laquelle est essignée le svg
/// @example @include scheme-element-data-uri-svg(g800, url("data:image/svg+xml;utf8,<svg><path fill="$COLOR" /></svg>"));
@mixin scheme-element-data-uri-svg($set-name, $value, $prop:background-image) {
  $set: map-get($scheme-sets, $set-name);

  // la custom property --data-uri-svg permet d'interchanger les svgs suivant les différents types de combinaison
  --data-uri-svg: #{_replace_color($value, _scheme-set-color($set, light), true)};

  #{$dark-theme-selector} & {
    --data-uri-svg: #{_replace_color($value, _scheme-set-color($set, dark), true)};
  }

  #{$not-dark-theme-selector} {
    $i: 0;
    @each $type, $variation in $scheme-blocks {
      $i: ($i + 1);
      [class*="#{$base-scheme}-#{$type}"] & {
        @if length($set) >= $i {
          --data-uri-svg: #{_replace_color($value, _scheme-set-color($set, light), true)};
        }
      }
    }
  }

  #{$prop}: var(--data-uri-svg);
}
