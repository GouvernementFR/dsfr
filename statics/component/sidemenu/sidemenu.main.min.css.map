{"version":3,"sources":["<no source>","../../../../../../src/component/sidemenu/style/module/_base.scss","../../../../../../src/core/style/typography/tool/_list.scss","../../../../../../src/core/style/action/tool/_link.scss","../../../../../../src/core/style/typography/tool/_styles.scss","../../../../../../src/core/style/color/tool/_shadow.scss","../../../../../../src/core/style/color/setting/_shadow.scss","../../../../../../src/core/style/spacing/tool/_space.scss","../../../../../../src/core/style/spacing/function/_space.scss","../../../../../../src/core/style/spacing/tool/_position.scss","../../../sidemenu.main.css","../../../../../../src/core/style/selector/tool/_block.scss","../../../../../../src/core/style/color/tool/_element.scss","../../../../../../src/component/sidemenu/style/module/_title.scss","../../../../../../src/core/style/typography/setting/_font-weight.scss","../../../../../../src/component/sidemenu/style/module/_list.scss","../../../../../../src/core/style/selector/tool/_pseudo.scss","../../../../../../src/core/style/spacing/tool/_size.scss","../../../../../../src/component/sidemenu/style/module/_inner.scss","../../../../../../src/component/sidemenu/style/module/_action.scss","../../../../../../src/core/style/action/tool/_hover.scss","../../../../../../src/core/style/display/tool/_display.scss","../../../../../../src/core/style/icon/_tool.scss","../../../../../../src/component/sidemenu/style/_scheme.scss","../../../../../../src/core/style/selector/tool/_breakpoint.scss","../../../../../../src/component/sidemenu/style/module/_variants.scss"],"names":[],"mappings":"AAAA;;GAAA,ACKA,aCoBE,cAAU,CACV,cAAU,CACV,YAAW,CACX,YAAW,CACX,YAAW,CACX,aAAY,CACZ,iBAAa,CCDb,oBAAgB,CAChB,yBAAqB,CCwEnB,gBAA6B,CAA7B,iBAA6B,CCjG/B,sECCyE,CCYrE,iBC2Ea,CD1Eb,kBC0Ea,CCxFjB,iBCcF,CTfA,2BAUI,cSSJ,CTnBA,0BM0BI,wBNRyB,CMQzB,uBGiBJ,CC1CE,oBC0BE,sDAAU,CAAV,4BAAU,CRRZ,kBAA6C,CSZ3C,eCAO,CVeP,mBAA6D,CGI7D,cG4CJ,CCzDE,mBIXE,eLoFJ,CCzEG,sCING,eDHQ,CPsBV,qBGiEJ,CC9EG,iHPMD,cAA6C,CWPvC,eDRM,CVkBV,kBMkFJ,CC3FG,uJPMD,iBAA6C,CAG3C,kBMwFJ,CC3FE,mBFlBA,iBC8HF,CMpHE,0BPFE,QAAQ,CGkBR,4FAAU,CIbR,UDegB,CCXhB,aAAS,CCoCT,WAAQ,CR1CV,MAAM,CMmBJ,mBAAoB,CN9BxB,iBAAU,CAKR,OAAO,CAHP,KAAK,CQgDH,UPyFN,CMjIE,gEAGI,YNwIN,CQrJG,iCXyBC,uBWjB0B,CXiB1B,uBG8IJ,CSrKA,qCCiDI,yBAAa,CAOb,2BAAc,CC7Cd,kBAAa,CT2Mb,eAAgB,CA9LhB,kCAAU,CSrBV,YAAa,CAIb,kBAAgB,CjBSlB,cAA6C,CeN7C,eLNS,CVeP,kBAA6D,CGI7D,oBC+De,CCxFjB,iBAAU,CUWV,eAAgB,CFuCZ,UP2NN,CMnQE,6EJyCM,8CAAgB,CAIhB,gDAAiB,CA7BrB,iDAAU,CHlBV,aAAQ,COKN,UGIe,CVNjB,MAAM,CAXR,iBAAU,CAER,UAAK,CQgDH,SP4ON,CSrQA,6CAGI,cAAe,CADf,mBT+QJ,CStQA,iCEvBI,kBAAa,CARb,YAAa,CAIb,0BX2SJ,CM1SE,wCMsBE,gBAAY,CAmCZ,6BAA8B,CNtD5B,UMwEU,CApBZ,oBAAqB,CADrB,aAAc,CLXZ,uBAAQ,CVhCR,gBYqByB,CZrBzB,cYsBuB,CGOzB,gEArCiD,CAsCjD,wDAtCiD,CAwDjD,2BAA4B,CAC5B,mBAAoB,CH1BlB,wBAA0B,CGsB5B,qBAAsB,CLhBpB,sBPoRN,CSlSA,sCPoLI,eFuIJ,CMrVE,6CG2CI,yBT8SN,CSpSA,sCPZQ,4CAAgB,CAIhB,8CAAiB,CA7BrB,+CAAU,COuCZ,eAAmB,CFff,UP6TN,CMrWE,6CTWI,iBG8VN,CMzWE,4CMsBE,gBAAY,CAmCZ,6BAA8B,CNtD5B,UMwEU,CApBZ,oBAAqB,CADrB,aAAc,CLXZ,uBAAQ,CVxCR,iBC2Ea,CD1Eb,kBC0Ea,CctCf,0DArCiD,CAsCjD,kDAtCiD,CAwDjD,2BAA4B,CAC5B,mBAAoB,CAJpB,qBAAsB,CLhBpB,sBP6UN,CMrXE,sCJgBE,sDFsZJ,CMtaE,qCJgBE,gDF0ZJ,Ca/XK,iEX3BD,oCFibJ,Cc/bI,wBvBbJ,aWyNI,eAAgB,CL3Md,aNAe,CMCf,cNDe,CMQf,iBCmEa,CEjEjB,CTxBF,0BMcM,mBC2Ea,CD1Eb,oBC0Ea,CD3Eb,mBC2Ea,CD1Eb,mBC0Ea,CExCjB,CChDA,oBCwNE,eAAgB,CL/LhB,iBC+De,CD/Df,QMhBkB,CHiEpB,CC9DC,sCJaC,aGsEF,CCnFC,uJJaC,oBG0FF,CCvGA,mBJaE,QGgGF,CM/GA,0BDuBM,YL+GN,CQhJA,oBN0BE,sDAAU,CLDV,uBGwIF,CQjKC,iCXyBC,QWdmB,CAIf,eAAgB,CADhB,gBAAiB,CXWrB,SGmJF,CMlKA,wCEQQ,YR0KR,CQ5LC,6DAsBO,kBRyKR,CevLE,oBlBaE,iBCmEa,CDnEb,eGsMJ,CenNG,wCAMG,cAAe,CbYnB,qDAAU,CLDV,qBGsMF,Ce1ME,qBhBrBF,eAAU,CAER,KCiOF,Ce9MG,yCAMG,gBAAiB,CADjB,aAAc,ClBLhB,iBGmNJ,CetME,iCRmBE,YAAQ,CRrDZ,eAAU,CAER,KC2OF,Ce3MG,qDRmBC,WAAQ,CQdN,aAAc,ClBlBhB,iBG6NJ,CenMG,8ClB1BC,iBGgOJ,CetMG,8CbrBD,qDAAU,CLDV,gBG+NF,CStPF,qCZuBI,QYjBe,CF0Cb,SAAO,CPiOX,CS/OF,iCZXI,gCGgSF,CM/SA,wCTWI,oBGqUJ,CS3RF,sCAeI,YToUF,CA1XF","file":"sidemenu.main.min.css","sourcesContent":[null,"////\n/// Sidemenu Module : base\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  @include disable-list-style;\n  @include disable-underline;\n  @include set-text-margin(0);\n  @include set-title-margin(0);\n  @include relative;\n  @include shadow(md);\n  @include margin-x(-4v);\n\n  a:not([href]) {\n    cursor: default;\n  }\n\n  @include scheme-element-no-box-shadow(md);\n  @include margin-x(0, md);\n  @include padding-right(8v, md);\n\n  #{ns(collapse)} {\n    @include margin(-1v -1v 0);\n    @include padding(1v 1v 0);\n    @include margin-x(-1v, md);\n    @include padding-x(1v, md);\n  }\n}\n","////\n/// Core Tool : Reset list\n/// @group core\n////\n\n@mixin enable-list-style() {\n  $selector: null;\n\n  @if & == null {\n    $selector: ':root';\n  }\n\n  @include nest($selector) {\n    --ul-type: disc;\n    --ol-type: decimal;\n    --ul-start: #{space(4v)};\n    --ol-start: #{space(6v)};\n    --xl-block: #{space(2v)};\n    --li-bottom: #{space(1v)};\n    --xl-base: 1em;\n    --ol-content: counters(li-counter, \".\") \".\\00a0\\00a0\";\n  }\n}\n\n@mixin disable-list-style() {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n}\n\n@mixin enable-list-style-legacy($unify: false) {\n  $ul: ul;\n  $ol: ol;\n\n  @if $unify {\n    $ul: selector-associate('&', 'ul');\n    $ol: selector-associate('&', 'ol');\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: disc;\n    }\n\n    #{$ol} {\n      list-style-type: decimal;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(4v);\n      @include margin-y(2v);\n    }\n  }\n}\n\n@mixin disable-list-style-legacy($unify: false) {\n  $ul: & ul;\n  $ol: & ol;\n\n  @if $unify {\n    $ul: selector-associate(&, ul);\n    $ol: selector-associate(&, ol);\n  }\n\n  @at-root {\n    #{$ul} {\n      list-style-type: none;\n    }\n\n    #{$ol} {\n      list-style-type: none;\n    }\n\n    #{$ul},\n    #{$ol} {\n      @include padding-left(0);\n      @include margin-y(0);\n    }\n  }\n}\n","////\n/// Core Tool : Reset\n/// @group core\n////\n\n$underline-thickness: 0.0625em;\n\n@mixin a-reset ($minimal: false) {\n  text-decoration: none;\n  @if not $minimal {\n    color: inherit;\n  }\n}\n\n@mixin enable-underline() {\n  --underline-img: linear-gradient(0deg, currentColor, currentColor);\n  --link-blank-content: '';\n}\n\n@mixin enable-underline-legacy() {\n  [href] {\n    text-decoration: underline;\n  }\n\n  [target='_blank']::after {\n    content: '';\n  }\n}\n\n@mixin disable-underline() {\n  --underline-img: none;\n  --link-blank-content: none;\n}\n\n@mixin disable-underline-legacy() {\n  [href] {\n    text-decoration: none;\n  }\n\n  [target='_blank']::after {\n    content: none;\n  }\n}\n\n@mixin link-underline() {\n  background-image: var(--underline-img), var(--underline-img);\n  background-position: 50% calc(50% + #{10.5 * $underline-thickness }), 50% calc(50% + #{10.5 * $underline-thickness });\n  background-repeat: no-repeat, no-repeat;\n  transition: background-size 0s;\n  @include link-underline-background-size(100%, 0);\n}\n\n@mixin link-underline-background-size($base-width: 100%, $hover-width: 100%) {\n  background-size: #{$hover-width} #{$underline-thickness * 2 }, #{$base-width} #{$underline-thickness };\n}\n\n@mixin hover-underline () {\n  &:hover,\n  &:active {\n    @include link-underline-background-size(100%, 100%);\n  }\n}\n\n@mixin link-blank() {\n  @include icon-style(after) {\n    @include margin-left(1v);\n    @include margin-bottom(1v);\n  }\n  @include icon-size(sm, after);\n  @include icon-content(external-link-line, after, null, var(--link-blank-content));\n}\n","////\n/// Core Tool : Typography build\n/// @group core\n////\n\n@function get-text-style($font-size) {\n  @return map-get($text-styles, $font-size);\n}\n\n@function get-title-style($font-size) {\n  @return map-get($title-styles, $font-size);\n}\n\n@mixin _stylize($font-size, $styles, $prepend, $append) {\n  $style: map-get($styles, $font-size);\n\n  @if $prepend == null {\n    $prepend: '';\n  }\n\n  @if $append == null {\n    $append: '';\n  }\n\n  font-size: #{$prepend} font-size($font-size) #{$append};\n\n  @if map-has-key($style, line-height) {\n    line-height: #{$prepend} space(map-get($style, line-height)) #{$append};\n  }\n}\n\n@mixin _responsive-styles($settings, $styles, $is-responsive, $prepend, $append) {\n  $breakpoints: map-get($settings, breakpoints);\n\n  @if map-has-key($settings, weight) {\n    font-weight: #{$prepend} map-get($font-weight-scale, map-get($settings, weight)) #{$append};\n  }\n\n  @if $is-responsive {\n    @each $breakpoint, $size in $breakpoints {\n      @if $breakpoint == first {\n        @include _stylize($size, $styles, $prepend, $append);\n      }\n      @else {\n        @include respond-from($breakpoint) {\n          @include _stylize($size, $styles, $prepend, $append);\n        }\n      }\n    }\n  }\n  @else {\n    @if map-has-key($breakpoints, md) {\n      @include _stylize(map-get($breakpoints, md), $styles);\n    }\n    @else {\n      @include _stylize(map-get($breakpoints, first), $styles);\n    }\n  }\n}\n\n@mixin _space-text($settings) {\n  @include margin( var(#{'--' + map-get($settings, 'margin') + '-spacing'}) );\n}\n\n@mixin text-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($text-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $text-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin title-style($name, $with-spacing: false, $is-responsive: true, $prepend: null, $important: false) {\n  $settings: map-get($title-settings, $name);\n  @if $settings {\n    $append: '';\n    @if $important {\n      $append: ' !important';\n    }\n\n    @include _responsive-styles($settings, $title-styles, $is-responsive, $prepend, $append);\n\n    @if $with-spacing {\n      @include _space-text($settings);\n    }\n  }\n}\n\n@mixin _set-typography-var($name, $value, $bp: null) {\n  @if $bp != null {\n    @include respond-from(#{$bp}) {\n      --#{$name}-spacing: #{space($value)};\n    }\n  }\n  @else {\n    --#{$name}-spacing: #{space($value)};\n  }\n}\n\n@mixin set-title-margin($margin, $bp:null) {\n  @include _set-typography-var(title, $margin, $bp);\n}\n\n@mixin set-text-margin($margin, $bp:null) {\n  @include _set-typography-var(text, $margin, $bp);\n}\n\n@mixin set-display-margin($margin, $bp:null) {\n  @include _set-typography-var(display, $margin, $bp);\n}\n","////\n/// Core Tool : Color shadow\n/// @group core\n////\n\n@mixin shadow($type) {\n  box-shadow: map_get($shadows-settings, $type);\n}\n","////\n/// Core Setting : Color shadow\n/// @group core\n////\n\n$shadows-settings: (\n  sm: (0 1px 4px 0 rgba(0, 0, 0, 0.23), 0 2px 0 -2px rgba(0, 0, 0, 0.16), 0 1px 1px 0 rgba(0, 0, 0, 0.16)),\n  md: (0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32)),\n  up: (0 -8px 8px 0 rgba(0, 0, 0, 0.1), 0 -8px 16px -16px rgba(0, 0, 0, 0.32))\n);\n","////\n/// Core Tool : Spacing space\n/// @group core\n////\n\n/// Set space property\n///\n/// @param {String} $property ['margin'] - propriété à appliquer à l'espacement `['margin', 'padding']`\n/// @param {Number | list} $value [2] - valeur de l'espacement en v ou w. peut être une liste si la direction n'est pas renseignée\n/// @param {String} $direction - direction de l'espacement `['x', 'y', 'top', 'right', 'bottom', 'left']`\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     @include _spacing('margin', 6v, 'bottom');\n///   }\n@mixin _spacing($property: margin, $value: 0, $direction: null) {\n  $v: space($value);\n  @if $direction != null {\n    @if $direction == 'x' {\n      #{$property}-left: $v;\n      #{$property}-right: $v;\n    }\n    @else if $direction == 'y' {\n      #{$property}-top: $v;\n      #{$property}-bottom: $v;\n    }\n    @else {\n      #{$property}-#{$direction}: $v;\n    }\n  }\n  @else {\n    #{$property}: $v;\n  }\n}\n\n@mixin _spacing-from($property: margin, $value: 0, $direction: null, $from: null) {\n  @include respond-from($from) {\n    @include _spacing($property, $value, $direction);\n  }\n}\n\n@mixin padding($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(padding, $values, null, $from);\n}\n\n@mixin padding-x($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'x', $from);\n}\n\n@mixin padding-y($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'y', $from);\n}\n\n@mixin padding-top($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'top', $from);\n}\n\n@mixin padding-right($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'right', $from);\n}\n\n@mixin padding-bottom($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'bottom', $from);\n}\n\n@mixin padding-left($value: 0, $from: null) {\n  @include _spacing-from(padding, $value, 'left', $from);\n}\n\n@mixin margin($values: 0 0 0 0, $from: null) {\n  @include _spacing-from(margin, $values, null, $from);\n}\n\n@mixin margin-x($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'x', $from);\n}\n\n@mixin margin-y($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'y', $from);\n}\n\n@mixin margin-top($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'top', $from);\n}\n\n@mixin margin-right($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'right', $from);\n}\n\n@mixin margin-bottom($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'bottom', $from);\n}\n\n@mixin margin-left($value: 0, $from: null) {\n  @include _spacing-from(margin, $value, 'left', $from);\n}\n","////\n/// Core Function : Spacing space\n/// @group core\n////\n\n/// Return space value from type map and convert to rem.\n///\n/// @param {Number} $value - valeur de l'espacement, permet de convertir cet espacement de v (4px) ou w (8px) en rem\n///\n/// @example scss - Set margin-bottom to 24px\n///   .foo {\n///     margin-bottom: space(6v);\n///   }\n@function space($value) {\n  @if type-of($value) == list {\n    $list: ();\n    $separator: list-separator($value);\n    @each $v in $value {\n      $list: append($list, space($v), $separator);\n    }\n    @return $list;\n  }\n  @if type-of($value) == string {\n    $c: str-index($value, '(');\n    @if $c {\n      $b: null;\n      $n: 0;\n      $i: $c + 1;\n      $l: str-length($value);\n      @while $b == null and $i <= $l {\n        $char: str-slice($value, $i, $i);\n        @if $char == '(' {\n          $n: $n + 1;\n        }\n        @else if $char == ')' {\n          @if $n > 0 {\n            $n: $n - 1;\n          }\n          @else {\n            $b: $i;\n          }\n        }\n        $i: $i + 1;\n      }\n\n      $start: unquote('');\n      $middle: space(str-slice($value, $c + 1, $b - 1));\n      $end: unquote('');\n\n      @if $c > 1 {\n        $start: space(str-slice($value, 1, $c - 1));\n      }\n\n      $l: str-length($value);\n      @if $b < $l {\n        $end: space(str-slice($value, $b + 1, $l));\n      }\n\n      @return unquote('#{$start}(#{$middle})#{$end}');\n    }\n\n    @if str-index($value, ',') {\n      @return space(str-split($value, ','));\n    }\n\n    @if str-index($value, ' ') {\n      @return space(str-split($value, ' '));\n    }\n\n    $value: unquote($value);\n  }\n\n  @if $value == 0 {\n    @return $value;\n  }\n\n  @if length($value) > 1 {\n    $result: ();\n    @each $v in $value {\n      $result: append($result, space($v));\n    }\n    @return $result;\n  }\n\n  @if is-basic-unit($value) {\n    @return $value;\n  }\n\n  $v: quote($value);\n\n  $q: str-to-num(unquote(str_slice($v, 0, str_length($v) - 1)));\n  $unit: str_slice($v, str-length($v), str_length($v));\n\n  @if is-unit($value, v) {\n    @return $q * $V;\n  }\n  @else if is-unit($value, w) {\n    @return $q * $W;\n  }\n  @return $value;\n}\n","////\n/// Core Tool : Spacing position\n/// @group core\n////\n\n@mixin position($position, $top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  position: #{$position};\n  @if $top != null {\n    top: #{space($top)};\n  }\n  @if $right != null {\n    right: #{space($right)};\n  }\n  @if $bottom != null {\n    bottom: #{space($bottom)};\n  }\n  @if $left != null {\n    left: #{space($left)};\n  }\n\n  @include size($width, $height);\n\n  @content;\n}\n\n@mixin relative($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(relative, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(absolute, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin fixed($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(fixed, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin sticky($top: null, $right: null, $bottom: null, $left: null, $width: null, $height: null) {\n  @include position(sticky, $top, $right, $bottom, $left, $width, $height);\n}\n\n@mixin top($top) {\n  top: space($top);\n}\n\n@mixin right($top) {\n  right: space($top);\n}\n\n@mixin bottom($top) {\n  bottom: space($top);\n}\n\n@mixin left($top) {\n  left: space($top);\n}\n","@charset \"UTF-8\";\n/* ¯¯¯¯¯¯¯¯¯ *\\\n  SIDEMENU\n\\* ˍˍˍˍˍˍˍˍˍ */\n.fr-sidemenu {\n  --ul-type: none;\n  --ol-type: none;\n  --ul-start: 0;\n  --ol-start: 0;\n  --xl-block: 0;\n  --li-bottom: 0;\n  --ol-content: none;\n  --underline-img: none;\n  --link-blank-content: none;\n  --text-spacing: 0;\n  --title-spacing: 0;\n  position: relative;\n  box-shadow: 0 8px 8px 0 rgba(0, 0, 0, 0.1), 0 8px 16px -16px rgba(0, 0, 0, 0.32);\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n\n.fr-sidemenu a:not([href]) {\n  cursor: default;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    box-shadow: none;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    padding-right: 2rem;\n  }\n}\n\n.fr-sidemenu .fr-collapse {\n  margin: -0.25rem -0.25rem 0;\n  padding: 0.25rem 0.25rem 0;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-collapse {\n    margin-left: -0.25rem;\n    margin-right: -0.25rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu .fr-collapse {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n  }\n}\n\n.fr-sidemenu {\n  /**\n  * Titre facultatif\n   */\n}\n\n.fr-sidemenu__title {\n  padding: 1rem 0;\n  font-size:  1.125rem ;\n  line-height:  1.75rem ;\n  font-weight: 700;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    margin: 0 0 1.5rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    padding: 0;\n  }\n}\n\n.fr-sidemenu__list {\n  font-weight: 700;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list {\n  margin: 0 0.5rem 1.5rem;\n  font-weight: 400;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list {\n    margin: 0 1rem;\n  }\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  font-weight: 400;\n}\n\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n.fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n  font-size:  0.875rem ;\n  line-height:  1.5rem ;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__link,\n  .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__list .fr-sidemenu__btn {\n    padding: 0.75rem 0.5rem;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__list {\n    margin: 0;\n  }\n}\n\n.fr-sidemenu__item {\n  position: relative;\n}\n\n.fr-sidemenu__item::before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__item::before {\n    content: none;\n  }\n}\n\n.fr-sidemenu__item .fr-sidemenu__item .fr-sidemenu__item::before {\n  content: none;\n}\n\n.fr-sidemenu__inner {\n  /**\n    * Ce wrapper ne sert que pour la version mobile\n    * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n    */\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    padding: 0 2rem 0 0.25rem;\n  }\n}\n\n.fr-sidemenu__inner > .fr-collapse {\n  margin: -0.25rem 0.75rem 0;\n  padding: 0.25rem 0.25rem 0;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    padding: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    margin: 0;\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-collapse {\n    overflow: initial;\n    max-height: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse::before {\n    display: none;\n  }\n  .fr-sidemenu__inner > .fr-collapse:not(.fr-collapse--expanded) {\n    visibility: inherit;\n  }\n}\n\n.fr-sidemenu {\n  /**\n   * Variantes du sidemenu proposées juste à partir du breakpoint md\n   */\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu {\n    /**\n     * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n     * La bordure se met sur la gauche\n     */\n    /**\n     * Modificateur pour que le sidemenu soit sticky\n     */\n    /**\n     * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n     */\n    /**\n     * Modificateur pour avoir une bordure tout autour du sidemenu\n     */\n  }\n  .fr-sidemenu--right {\n    padding-left: 2rem;\n    padding-right: 0;\n  }\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    padding: 0 1rem 0 2rem;\n    border-right: 0;\n  }\n  .fr-sidemenu--sticky {\n    position: sticky;\n    top: 0;\n  }\n  .fr-sidemenu--sticky .fr-sidemenu__inner {\n    padding-top: 0.5rem;\n    overflow: auto;\n    max-height: 100vh;\n  }\n  .fr-sidemenu--sticky-full-height {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n  }\n  .fr-sidemenu--sticky-full-height .fr-sidemenu__inner {\n    padding-top: 0.5rem;\n    overflow: auto;\n    height: 100%;\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__title {\n    padding-top: 0.5rem;\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    padding: 0 0.25rem;\n  }\n}\n\n/**\n * Styles du bouton et du lien d'accès direct du sidemnu\n */\n.fr-sidemenu__link,\n.fr-sidemenu__btn {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n  padding: 0.75rem 0.5rem;\n  font-size:  1rem ;\n  line-height:  1.5rem ;\n  box-shadow: none;\n  text-align: left;\n  font-weight: 700;\n  --hover-tint: var(--hover);\n  --active-tint: var(--active);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__link,\n  .fr-sidemenu__btn {\n    margin: 0;\n  }\n}\n\n.fr-sidemenu__link[aria-current]::after,\n.fr-sidemenu__btn[aria-current]::after {\n  content: \"\";\n  position: absolute;\n  top: 0.75rem;\n  bottom: 0.75rem;\n  left: 0;\n  width: 2px;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__link,\n  .fr-sidemenu__btn {\n    width: 100%;\n  }\n}\n\n.fr-sidemenu__link[aria-current]:not([href]) {\n  pointer-events: none;\n  cursor: default;\n}\n\n/**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n.fr-sidemenu__btn[aria-expanded] {\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__btn[aria-expanded] {\n    padding: 0.75rem 2rem 0.75rem 0.5rem;\n  }\n}\n\n.fr-sidemenu__btn[aria-expanded]::before {\n  content: \"\";\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n\n.fr-sidemenu__btn[aria-expanded]::before {\n  -webkit-mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n  mask-image: url(\"../../icons/system/arrow-down-s-line.svg\");\n}\n\n.fr-sidemenu__btn[aria-expanded]::before {\n  --icon-size: 1rem;\n}\n\n.fr-sidemenu__btn[aria-expanded]::before {\n  margin-left: auto;\n  margin-right: 0;\n  transition: transform 0.3s;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__btn[aria-expanded]::before {\n    margin-right: -1.5rem;\n  }\n}\n\n.fr-sidemenu__btn[aria-expanded=\"true\"] {\n  box-shadow: none;\n}\n\n.fr-sidemenu__btn[aria-expanded=\"true\"]::before {\n  transform: rotate(-180deg);\n}\n\n/**\n * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n */\n.fr-sidemenu__inner > .fr-sidemenu__btn {\n  width: 100%;\n  font-weight: normal;\n  /**\n  * Ajout de l'icône de menu en mode mobile (provisoire)\n  */\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::before {\n  margin-right: 1rem;\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  content: \"\";\n  flex: 0 0 auto;\n  display: inline-block;\n  vertical-align: middle;\n  background-color: currentColor;\n  width: var(--icon-size);\n  height: var(--icon-size);\n  -webkit-mask-size: 100% 100%;\n  mask-size: 100% 100%;\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  -webkit-mask-image: url(\"../../icons/system/menu-2-fill.svg\");\n  mask-image: url(\"../../icons/system/menu-2-fill.svg\");\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  --icon-size: 1rem;\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn::after {\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner > .fr-sidemenu__btn {\n    display: none;\n  }\n}\n\n.fr-sidemenu {\n  /*\n    @include scheme-element-bg-color(default grey);\n\n    @include respond-from(md) {\n      @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    }\n    */\n}\n\n.fr-sidemenu__title {\n  color: var(--text-title-grey);\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__title {\n    box-shadow: none;\n  }\n}\n\n.fr-sidemenu__item::before {\n  box-shadow: 0 -1px 0 0 var(--border-default-grey), inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n.fr-sidemenu__item:first-child::before {\n  box-shadow: inset 0 -1px 0 0 var(--border-default-grey);\n}\n\n.fr-sidemenu__item:last-child::before {\n  box-shadow: 0 -1px 0 0 var(--border-default-grey);\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu__inner {\n    box-shadow: inset -1px 0 0 0 var(--border-default-grey);\n  }\n}\n\n@media (min-width: 48em) {\n  .fr-sidemenu--right .fr-sidemenu__inner {\n    box-shadow: inset 1px 0 0 0 var(--border-default-grey);\n  }\n  .fr-sidemenu--full-border .fr-sidemenu__inner {\n    box-shadow: inset 0 0 0 1px var(--border-default-grey);\n  }\n}\n\n.fr-sidemenu__link, .fr-sidemenu__btn {\n  color: var(--text-action-high-grey);\n}\n\n.fr-sidemenu__link[aria-current], .fr-sidemenu__btn[aria-current] {\n  color: var(--text-active-blue-france);\n}\n\n.fr-sidemenu__link[aria-current]::after, .fr-sidemenu__btn[aria-current]::after {\n  background-color: var(--border-active-blue-france);\n  --hover: var(--border-active-blue-france-hover);\n  --active: var(--border-active-blue-france-active);\n}\n\n.fr-sidemenu__inner > .fr-sidemenu__btn {\n  background-color: var(--background-default-grey);\n  --hover: var(--background-default-grey-hover);\n  --active: var(--background-default-grey-active);\n}\n","////\n/// Core Tool : Selector block\n/// @group core\n////\n\n@mixin title() {\n  &__title {\n    @content;\n  }\n}\n\n@mixin body() {\n  &__body {\n    @content;\n  }\n}\n\n@mixin list() {\n  &__list {\n    @content;\n  }\n}\n\n@mixin list-item() {\n  &__item {\n    @content;\n  }\n}\n","////\n/// Core Color Tools : Element\n/// @group core\n////\n\n$ACCENT: none;\n\n@mixin _scheme-element($prop, $context, $tokens, $options: (), $value: $COLOR) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n  $standalone: map-get($options, standalone);\n\n  $legacy-target: null;\n  @if $legacy {\n    $legacy-target: ie11;\n  }\n\n  $tokens: normalise-tokens($tokens, $context);\n  $type: decision;\n  $options: (var: true);\n\n  @if $legacy or $standalone {\n    $type: hex;\n    $option: (theme: light);\n  }\n\n  $colors: get-colors($tokens, $type, $options);\n  $result: get-result($colors, $value);\n  $result: important($result, $important);\n\n  @include legacy($legacy-target) {\n    #{$prop}: #{$result};\n  }\n\n  @if ($hover == true or ($hover == inherit and $legacy == false)) and ($context == background and length($tokens) == 1) {\n    $nest-hover: null;\n    $prop-hover: --hover;\n    $result-hover: #{important(get-color(nth($tokens, 1), decision, (var: true, hover: true)), $important)};\n    $nest-active: null;\n    $prop-active: --active;\n    $result-active: #{important(get-color(nth($tokens, 1), decision, (var: true, active: true)), $important)};\n\n    @if $legacy or $standalone {\n      $type: hex;\n      $option: (theme: light);\n\n      $nest-hover: '&:hover';\n      $prop-hover: $prop;\n      $result-hover: #{important(get-color(nth($tokens, 1), hex, (hover: true)), $important)};\n      $nest-active: '&:active';\n      $prop-active: $prop;\n      $result-active: #{important(get-color(nth($tokens, 1), hex, (active: true)), $important)};\n    }\n\n    @include legacy($legacy-target) {\n      @include nest($nest-hover) {\n        #{$prop-hover}: #{$result-hover};\n      }\n\n      @include nest($nest-active) {\n        #{$prop-active}: #{$result-active};\n      }\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-color($tokens, $options:()) {\n  @if not map-has-key($options, hover) {\n    $options: map-merge($options, (hover: inherit));\n  }\n  @include _scheme-element(background-color, background, $tokens, $options);\n}\n\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - hover {boolean}: si true, surcharge la valeur de blend pour être héritée\n@mixin scheme-element-bg-transparent($options) {\n  $legacy: map-get($options, legacy);\n  $important: map-get($options, important);\n  $hover: map-get($options, hover);\n  $tokens: normalise-tokens(default grey, background);\n  $value: important(transparent, $important);\n\n  @if $legacy {\n    @include legacy(ie11) {\n      background-color: transparent;\n\n      @if $hover {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &:active {\n          background-color: rgba(0, 0, 0, 0.1);\n        }\n      }\n    }\n  }\n  @else {\n    background-color: #{$value};\n    @if $hover {\n      --hover: inherit;\n      --active: inherit;\n    }\n  }\n}\n\n/// Ajout d'une couleur de background sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-bg-image-color($tokens, $options, $value: linear-gradient(0deg, $COLOR, $COLOR)) {\n  $d: get-tokens-length($tokens);\n  @if $d > 1 and $value == linear-gradient(0deg, $COLOR, $COLOR) {\n    $transformed: ();\n    @for $i from 1 through $d {\n      $c: unquote('$color##{$i}');\n      $transformed: append($transformed, linear-gradient(0deg, $c, $c), comma);\n    }\n    $value: $transformed;\n  }\n  @include _scheme-element(background-image, background, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de texte sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-text-color($tokens, $options) {\n  @include _scheme-element(color, text, $tokens, $options);\n}\n\n/// Ajout d'une couleur de fill sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n@mixin scheme-element-fill-color($tokens, $options) {\n  @include _scheme-element(fill, background , $tokens, $options);\n}\n\n/// Ajout d'une couleur de border sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n///   - side {String}: le côté affecté. valeurs: top, right, bottom, left\n/// @param {List} $value - définition des propriétés de border\n@mixin scheme-element-border-color($tokens, $options, $value:1px solid $COLOR) {\n  $prop:border;\n  @if map-has-key($options, side) {\n    $prop:border-#{map-get($options, side)};\n  }\n  @include _scheme-element($prop, border, $tokens, $options, $value);\n}\n\n@mixin scheme-element-no-border($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    border: 0;\n  }\n}\n\n/// Ajout d'une couleur d'outline sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés d'outline\n@mixin scheme-element-outline-color($tokens, $options, $value:1px solid $COLOR) {\n  @include _scheme-element(outline, border, $tokens, $options, $value);\n}\n\n/// Ajout d'une couleur de box-shadow sur un élément\n/// @access public\n/// @param {list} $tokens - liste des tokens de décision\n/// @param {map} $options - map des options :\n///   - legacy {boolean}: version pour navigateurs modernes ou anciens.\n///   - important {boolean}: si true, applique !important à la règle css\n/// @param {List} $value - définition des propriétés de box-shadow\n@mixin scheme-element-box-shadow-color($tokens, $options, $value: all-1-in) {\n  $has-keys: true;\n  $transformed: ();\n  $d: get-tokens-length($tokens);\n  $i: 1;\n  @each $v in $value {\n    @if map-has-key($box-shadows, $v) {\n      $transformed: append($transformed, _get-box-shadow($v, $i), comma);\n      @if $i < $d {\n        $i: $i + 1;\n      }\n    }\n    @else {\n      $has-keys: false;\n    }\n  }\n  @if $has-keys {\n    $value: $transformed;\n  }\n  @include _scheme-element(box-shadow, border, $tokens, $options, space($value));\n}\n\n/// Supprime la shadow-box sur l'élément\n/// @access public\n/// @param {string} $breakpoint - la shadow-box est retiré à partir d'un breakpoint si celui-ci est défini\n@mixin scheme-element-no-box-shadow($breakpoint: null) {\n  @include respond-from($breakpoint) {\n    box-shadow: none;\n  }\n}\n","////\n/// Sidemenu Module : title\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  /**\n  * Titre facultatif\n   */\n  @include title {\n    @include padding(4v 0);\n    @include text-style(lg);\n    font-weight: font-weight(bold);\n\n    @include margin(0 0 6v, md);\n    @include padding(0, md);\n  }\n}\n","////\n/// Core Setting : Typography font-weight\n/// @group core\n////\n\n$font-weight-scale: (\n  thin: 100,\n  extra-light: 200,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  semi-bold: 600,\n  bold: 700,\n  extra-bold: 800,\n  heavy: 900\n);\n\n$font-weight-names: (\n  100: thin,\n  200: extra-light,\n  300: light,\n  400: regular,\n  500: medium,\n  600: semi-bold,\n  700: bold,\n  800: extra-bold,\n  900: heavy\n);\n\n$font-weight-vars: (\n  values: 300 400 500 700 900,\n  breakpoints: false\n) !default;\n\n@if (map-get($typography-vars, font-weight) != null) {\n  $font-weight-vars: map-get($typography-vars, font-weight);\n}\n","////\n/// Sidemenu Module : list\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  @include list {\n    font-weight: font-weight('bold');\n\n    #{ns(sidemenu__list)} {\n      @include margin(0 2v 6v);\n      @include margin(0 4v, md);\n      font-weight: font-weight();\n\n      #{ns(sidemenu__link)},\n      #{ns(sidemenu__btn)} {\n        @include text-style(md);\n        font-weight: font-weight();\n      }\n\n      #{ns(sidemenu__list)} {\n        #{ns(sidemenu__link)},\n        #{ns(sidemenu__btn)} {\n          @include text-style(sm);\n          @include padding(3v 2v, md);\n        }\n      }\n    }\n\n    @include margin(0, md);\n  }\n\n  @include list-item {\n    @include relative;\n    @include before('', block) {\n      @include absolute(0, 0, 0, 0, 100%, 100%);\n      pointer-events: none;\n\n      @include respond-from(md) {\n        content: none;\n      }\n    }\n\n    & & & {\n      @include before(none);\n    }\n  }\n}\n","////\n/// Core Tool : Selector pseudo\n/// @group core\n////\n\n@mixin _pseudo($type:before, $content:null, $display:null) {\n  @if $type != after and $type != before and $type != marker and $type != (before after) {\n    @error '$type must be before or after element';\n  }\n\n  $selector: ();\n\n  @each $pseudo in $type {\n    $selector: append($selector, '&::#{$pseudo}', 'comma');\n  }\n\n  #{$selector} {\n\n    @if $content != null {\n      content: $content;\n    }\n\n    @if $display != null {\n      display: #{$display};\n    }\n\n    @content;\n  }\n}\n\n@mixin before($content: null, $display: null) {\n  @include _pseudo(before, $content, $display) {\n    @content;\n  }\n}\n\n@mixin after($content: null, $display: null) {\n  @include _pseudo(after, $content, $display) {\n    @content;\n  }\n}\n\n@mixin marker($content: null, $display: null) {\n  @include _pseudo(marker, $content, $display) {\n    @content;\n  }\n}\n","////\n/// Core Tool : Spacing size\n/// @group core\n////\n\n@mixin width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n  }\n}\n\n@mixin min-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      min-width: #{space($width)};\n    }\n  }\n}\n\n@mixin max-width($width:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      max-width: #{space($width)};\n    }\n  }\n}\n\n@mixin height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      min-height: #{space($height)};\n    }\n  }\n}\n\n@mixin max-height($height:null, $from: null) {\n  @include respond-from($from) {\n    @if $height != null {\n      max-height: #{space($height)};\n    }\n  }\n}\n\n@mixin size($width:null, $height:null, $from: null) {\n  @include respond-from($from) {\n    @if $width != null {\n      width: #{space($width)};\n    }\n    @if $height != null {\n      height: #{space($height)};\n    }\n  }\n}\n\n@mixin min-size($min-width:null, $min-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $min-width != null {\n      min-width: #{space($min-width)};\n    }\n    @if $min-height != null {\n      min-height: #{space($min-height)};\n    }\n  }\n}\n\n@mixin max-size($max-width:null, $max-height:null, $from: null) {\n  @include respond-from($from) {\n    @if $max-width != null {\n      max-width: #{space($max-width)};\n    }\n    @if $max-height != null {\n      max-height: #{space($max-height)};\n    }\n  }\n}\n","////\n/// Sidemenu Module : inner\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  &__inner {\n    @include padding(0 8v 0 1v, md);\n\n    /**\n    * Ce wrapper ne sert que pour la version mobile\n    * On l'utilise pour l'ouverture/fermeture du sidemenu entier\n    */\n    > #{ns(collapse)} {\n      @include margin(-1v 3v 0);\n      @include padding(1v 1v 0);\n      @include padding(0, md);\n      @include margin(0, md);\n\n      @include respond-from(md) {\n        overflow: initial;\n        max-height: none;\n\n        @include before {\n          display: none;\n        }\n\n        &:not(#{ns(collapse)}--expanded) {\n          visibility: inherit;\n        }\n      }\n    }\n  }\n}\n","////\n/// Sidemenu Module : action\n/// @group sidemenu\n////\n\n/**\n * Styles du bouton et du lien d'accès direct du sidemnu\n */\n#{ns(sidemenu__link)},\n#{ns(sidemenu__btn)} {\n  @include relative;\n  @include display-flex(row, center);\n  @include size(100%);\n  @include padding(3v 2v);\n  @include margin(0, md);\n  @include text-style(md);\n  @include scheme-element-no-box-shadow;\n  text-align: left;\n  font-weight: font-weight(bold);\n\n  @include enable-tint;\n\n  &[aria-current] {\n    @include after('') {\n      @include absolute(3v, null, 3v, 0, 2px);\n    }\n  }\n\n  @include size(100%, null, md);\n}\n\n#{ns(sidemenu__link)} {\n  &[aria-current]:not([href]) {\n    pointer-events: none;\n    cursor: default;\n  }\n}\n\n/**\n * Style du bouton du sidemnenu pour ouvrir/refermer les listes de niveaux 1 et 2\n * Bouton pour la version mobile pour ouvrir/refermer le sidemenu\n */\n#{ns(sidemenu__btn)} {\n  &[aria-expanded] {\n    @include display-flex(row-reverse, center);\n    @include padding(3v 8v 3v 2v, md);\n\n    @include icon(arrow-down-s-line, sm) {\n      @include margin-left(auto);\n      @include margin-right(0);\n      transition: transform 0.3s;\n\n      @include margin-right(-6v, md);\n    }\n  }\n\n  &[aria-expanded=\"true\"] {\n    @include scheme-element-no-box-shadow;\n    @include before {\n      transform: rotate(-180deg);\n    }\n  }\n}\n\n/**\n * Modificateur pour le bouton en version mobile permettant d'ouvrir/refermer le sidemenu\n * L'icône de gauche est défini dans _sidemenu.scss (provisoire)\n */\n// @TODO transformer en modifier\n#{ns(sidemenu__inner)} > #{ns(sidemenu__btn)} {\n  @include size(100%);\n  font-weight: normal;\n  @include before {\n    @include margin-right(4v);\n  }\n\n  /**\n  * Ajout de l'icône de menu en mode mobile (provisoire)\n  */\n  @include icon(menu-2-fill, sm, after) {\n    @include margin-x(2v);\n  }\n\n  @include respond-from(md) {\n    display: none;\n  }\n}\n","////\n/// Core Tool : Action Hover\n/// @group core\n////\n\n@mixin hover-media-query () {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin hover-type-selector($elements, $type: all, $check-disabled: false) {\n  $selectors: ();\n\n  @each $element, $setting in $elements {\n    $hover: map-get($setting, hover);\n    $selector: map-get($setting, selector);\n    @if $hover {\n      @if $type == map-get($hover, type) or $type == all {\n        $nested: $selector;\n        @if $check-disabled {\n          $nested: nest($selector, map-get($hover, selector));\n        }\n        $associated: $nested;\n        @if & != null and quote(&) != ':root' {\n          $associated: selector-associate(quote(&), $nested);\n        }\n        $selectors: append($selectors, $associated, 'comma');\n      }\n    }\n  }\n\n  @at-root #{$selectors} {\n    @content;\n  }\n}\n\n@mixin hover-tint () {\n  &:hover {\n    background-color: var(--hover-tint);\n  }\n\n  &:active {\n    background-color: var(--active-tint);\n  }\n}\n\n@mixin enable-tint () {\n  @include tint-enabled(true, true);\n}\n\n@mixin disable-tint() {\n  @include tint-enabled(false, false);\n}\n\n@mixin tint-enabled ($hover: null, $active: null) {\n  @if $hover {\n    --hover-tint: var(--hover);\n  }\n  @else if $hover == false {\n    --hover-tint: transparent;\n  }\n\n  @if $active {\n    --active-tint: var(--active);\n  }\n  @else if $active == false {\n    --active-tint: transparent;\n  }\n}\n\n@mixin hover-brighten ($element, $img) {\n  @at-root #{$element} {\n    &:hover {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten});\n      }\n    }\n\n    &:active {\n      #{$img} {\n        --brightness: calc(100% + var(--brighten) * #{$hover-brighten * 2});\n      }\n    }\n  }\n}\n\n@mixin hover-brighten-filter () {\n  filter: brightness(var(--brightness));\n}\n","////\n/// Core Tool : Display display\n/// @group core\n////\n\n@mixin display-flex($flex-direction: row, $align-items: null, $justify-content: null, $flex-wrap: null, $inline: false) {\n\n  @if $inline == true {\n    display: inline-flex;\n  }\n  @else {\n    display: flex;\n  }\n\n  @if $flex-direction != null {\n    flex-direction: #{$flex-direction};\n  }\n\n  @if $align-items != null {\n    align-items: #{$align-items};\n  }\n\n  @if $justify-content != null {\n    justify-content: #{$justify-content};\n  }\n\n  @if $flex-wrap != null {\n    flex-wrap: #{$flex-wrap};\n  }\n}\n","////\n/// Core Tool : Icon\n/// @group core\n////\n\n/// Return icon size from map\n/// @param {String} $size ['md'] - Icon size from `$icon-size-map` (Default to 'md' = 16px)\n///\n/// @example scss - Set icon size to `SM` (12px)\n///   .foo {\n///     width: icon-size(sm);\n///     height: icon-size(sm);\n///   }\n@function icon-size($size: md) {\n  @return px-rem(map-get($icon-size-map, $size));\n}\n\n@function get-url-icon($icon, $important: false) {\n  $config: map-get($icons-config, $icon);\n  $url: url('#{$dist-path}#{map-get($config, path)}');\n  @return important($url, $important);\n}\n\n@mixin with-icon($size:md) {\n  @include has-icon {\n    @include before {\n      @include icon-size($size);\n      @content;\n    }\n  }\n}\n\n@mixin icon-size($size:md, $pseudo: null) {\n  $selector: null;\n  @if $pseudo == before or $pseudo == after {\n    $selector: '&::#{$pseudo}';\n  }\n  @include nest($selector) {\n    --icon-size: #{icon-size($size)};\n  }\n}\n\n@mixin icon-size-legacy($size:md, $pseudo: null) {\n  $selector: null;\n  @if $pseudo == before or $pseudo == after {\n    $selector: '&::#{$pseudo}';\n  }\n  @include nest($selector) {\n    $size: icon-size($size);\n    @include size($size, $size);\n  }\n}\n\n@mixin icon-content($icon, $pseudo: before, $important: false, $content: null) {\n  @include _pseudo($pseudo, $content) {\n    $url: get-url-icon($icon, $important);\n    -webkit-mask-image: $url;\n    mask-image: $url;\n  }\n}\n\n@mixin icon-content-legacy($icon, $pseudo: before, $important: false, $content: null) {\n  @include _pseudo($pseudo, $content) {\n    $url: get-url-icon($icon, $important);\n    background-image: $url;\n  }\n}\n\n@mixin icon-style($pseudo: before, $content: '') {\n  @include _pseudo($pseudo, $content) {\n    flex: 0 0 auto;\n    display: inline-block;\n    vertical-align: middle;\n    background-color: currentColor;\n    @include size(var(--icon-size), var(--icon-size));\n    -webkit-mask-size: 100% 100%;\n    mask-size: 100% 100%;\n    @content;\n  }\n}\n\n@mixin icon-style-legacy($pseudo: before, $content: null) {\n  @include _pseudo($pseudo, $content) {\n    background-color: transparent;\n    background-size: 100%;\n    background-repeat: no-repeat;\n  }\n}\n\n@mixin icon($icon: null, $size: md, $pseudo: before, $init: true) {\n  @if $init {\n    $content: '';\n    @if $icon == null {\n      $content: null;\n    }\n    @include icon-style($pseudo, $content);\n  }\n\n  @if $icon != null {\n    @include icon-content($icon, $pseudo);\n  }\n\n  @if $size != null {\n    @include icon-size($size, $pseudo);\n  }\n\n  @include _pseudo($pseudo) {\n    @content;\n  }\n}\n\n@mixin icon-legacy($icon: null, $size: md, $pseudo: before, $init: true) {\n  @if $init {\n    $content: null;\n    @if $icon != null {\n      content: '';\n    }\n    @include icon-style-legacy($pseudo, $content);\n  }\n\n  @if $icon != null {\n    @include icon-content-legacy($icon, $pseudo);\n  }\n\n  @if $size != null {\n    @include icon-size-legacy($size, $pseudo);\n  }\n\n  @include _pseudo($pseudo) {\n    @content;\n  }\n}\n\n@function filter-icons($category, $config: $icons-config) {\n  $filtered: ();\n  @each $icon, $setting in $config {\n    @if map-get($setting, category) == $category {\n      $filtered: map-merge($filtered, (#{$icon}: $setting));\n    }\n  }\n  @return $filtered;\n}\n\n@mixin generate-icons($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-content($icon, before, true);\n    }\n  }\n}\n\n@mixin generate-icons-legacy($config: $icons-config) {\n  @each $icon, $setting in $config {\n    #{ns(icon-#{$icon})} {\n      @include icon-content-legacy($icon, before, true);\n    }\n  }\n}\n","////\n/// Sidemenu Scheme\n/// @group sidemenu\n////\n\n@mixin _sidemenu-scheme($legacy: false) {\n  #{ns(sidemenu)} {\n    /*\n    @include scheme-element-bg-color(default grey);\n\n    @include respond-from(md) {\n      @include scheme-element-bg-transparent((legacy:$legacy, hover: true));\n    }\n    */\n\n    @include title {\n      @include scheme-element-text-color(title grey, (legacy:$legacy));\n      @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), bottom-1-in);\n      @include scheme-element-no-box-shadow(md);\n    }\n\n    @include list-item {\n      @include before {\n        @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), top-1-out bottom-1-in);\n      }\n\n      &:first-child {\n        @include before {\n          @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), bottom-1-in);\n        }\n      }\n\n      &:last-child {\n        @include before {\n          @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), top-1-out);\n        }\n      }\n    }\n\n    &__inner {\n      @include respond-from(md) {\n        @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), right-1-in);\n      }\n    }\n\n    @include respond-from(md) {\n      &--right {\n        #{ns(sidemenu__inner)} {\n          @include scheme-element-box-shadow-color(default grey, (legacy:$legacy), left-1-in);\n        }\n      }\n\n      &--full-border {\n        #{ns(sidemenu__inner)} {\n          @include scheme-element-box-shadow-color(default grey, (legacy:$legacy));\n        }\n      }\n    }\n\n    &__link,\n    &__btn {\n      @include scheme-element-text-color(action-high grey, (legacy:$legacy));\n\n      &[aria-current] {\n        @include scheme-element-text-color(active blue-france, (legacy:$legacy));\n        @include after {\n          @include scheme-element-bg-color(border active blue-france, (legacy:$legacy));\n        }\n      }\n    }\n\n    &__btn {\n      @at-root #{ns(sidemenu__inner)} > #{&} {\n        @include scheme-element-bg-color(default grey, (legacy:$legacy));\n      }\n    }\n  }\n}\n","////\n/// Core Tool : Selector Breakpoint\n/// @group core\n////\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-from(md) {\n///     }\n///   }\n@mixin respond-from($media) {\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null {\n    @media (min-width: nth($limits, 1)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n/// Set media query styles\n///\n/// @param {String} $media [md] - Layout size `['xs', 'sm', 'md', 'lg', 'xl']`\n///\n/// @example scss -\n///   .foo {\n///     @include respond-to(md) {\n///     }\n///   }\n@mixin respond-to($media) {\n\n  @debug 'afin de rester mobile first, n‘utiliser la mixin respond-to uniquement s‘il n‘y a pas d‘autre alternative, lui préférer systématiquement la mixin respond-from';\n\n  $limits: map_get($breakpoints, $media);\n\n  @if $limits != null and length($limits) == 2 {\n    @media (max-width: nth($limits, 2)) {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n","////\n/// Sidemenu Module : variants\n/// @group sidemenu\n////\n\n#{ns(sidemenu)} {\n  /**\n   * Variantes du sidemenu proposées juste à partir du breakpoint md\n   */\n  @include respond-from(md) {\n    /**\n     * Modificateur pour que le sidemenu s'adapte à un affichage à droite du contenu\n     * La bordure se met sur la gauche\n     */\n    &--right {\n      @include padding-left(8v);\n      @include padding-right(0);\n\n      #{ns(sidemenu__inner)} {\n        @include padding(0 4v 0 8v);\n        border-right: 0;\n      }\n    }\n\n    /**\n     * Modificateur pour que le sidemenu soit sticky\n     */\n    &--sticky {\n      @include sticky(0);\n\n      #{ns(sidemenu__inner)} {\n        @include padding-top(2v);\n        overflow: auto;\n        max-height: 100vh;\n      }\n    }\n\n    /**\n     * Modificateur pour que le sidemenu soit à la fois sticky et prenne toute la hauteur de la page\n     */\n    &--sticky-full-height {\n      @include sticky(0, null, null, null, null, 100vh);\n\n      #{ns(sidemenu__inner)} {\n        @include padding-top(2v);\n        overflow: auto;\n        @include size(null, 100%);\n      }\n    }\n\n    /**\n     * Modificateur pour avoir une bordure tout autour du sidemenu\n     */\n    &--full-border {\n      #{ns(sidemenu__title)} {\n        @include padding-top(2v);\n      }\n\n      #{ns(sidemenu__inner)} {\n        @include padding(0 1v);\n      }\n    }\n  }\n}\n"]}