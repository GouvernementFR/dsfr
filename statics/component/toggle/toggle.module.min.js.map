{"version":3,"file":"toggle.module.min.js","sources":["../../../.config/config.js","../../../src/core/api.js","../../../src/component/toggle/script/toggle/toggle-input.js","../../../src/component/toggle/script/toggle/toggle-status-label.js","../../../src/component/toggle/script/toggle/toggle-selector.js","../../../src/component/toggle/index.js","../../../src/component/toggle/main.js"],"sourcesContent":["const config = {\r\n  prefix: 'fr',\r\n  namespace: 'dsfr',\r\n  organisation: '@gouvfr',\r\n  version: '1.5.1'\r\n};\r\n\r\nexport default config;\r\n","import config from './config.js';\nconst api = window[config.namespace];\nexport default api;\n","import api from '../../api.js';\n\nclass ToggleInput extends api.core.Instance {\n  static get instanceClassName () {\n    return 'ToggleInput';\n  }\n\n  get isChecked () {\n    return this.hasAttribute('checked');\n  }\n}\n\nexport { ToggleInput };\n","import api from '../../api.js';\nimport { ToggleInput } from './toggle-input.js';\n\nclass ToggleStatusLabel extends api.core.Instance {\n  static get instanceClassName () {\n    return 'ToggleStatusLabel';\n  }\n\n  init () {\n    this.register(`input[id=\"${this.getAttribute('for')}\"]`, ToggleInput);\n    this.update();\n    this.isSwappingFont = true;\n  }\n\n  get proxy () {\n    const scope = this;\n    return Object.assign(super.proxy, {\n      update: scope.update.bind(scope)\n    });\n  }\n\n  get input () {\n    return this.getRegisteredInstances('ToggleInput')[0];\n  }\n\n  update () {\n    this.node.style.removeProperty('--toggle-status-width');\n    const checked = this.input.isChecked;\n\n    const style = getComputedStyle(this.node, ':before');\n    let maxWidth = parseFloat(style.width);\n    this.input.node.checked = !checked;\n\n    const style2 = getComputedStyle(this.node, ':before');\n    const width = parseFloat(style2.width);\n    if (width > maxWidth) maxWidth = width;\n    this.input.node.checked = checked;\n\n    this.node.style.setProperty('--toggle-status-width', (maxWidth / 16) + 'rem');\n  }\n\n  swapFont (families) {\n    this.update();\n  }\n}\n\nexport { ToggleStatusLabel };\n","import api from '../../api.js';\n\nexport const ToggleSelector = {\n  STATUS_LABEL: `${api.internals.ns.selector('toggle__label')}${api.internals.ns.attr.selector('checked-label')}${api.internals.ns.attr.selector('unchecked-label')}`\n};\n","import api from './api.js';\nimport { ToggleStatusLabel } from './script/toggle/toggle-status-label.js';\nimport { ToggleSelector } from './script/toggle/toggle-selector.js';\n// import { ToggleInput } from './script/toggle/toggle-input.js';\n\napi.toggle = {\n  ToggleStatusLabel: ToggleStatusLabel,\n  ToggleSelector: ToggleSelector\n};\n\nexport default api;\n","import api from './index.js';\n\napi.internals.register(api.toggle.ToggleSelector.STATUS_LABEL, api.toggle.ToggleStatusLabel);\n\nexport default api;\n"],"names":["api","window","ToggleInput","core","Instance","instanceClassName","isChecked","this","hasAttribute","ToggleStatusLabel","init","register","getAttribute","update","isSwappingFont","proxy","Object","assign","super","bind","input","getRegisteredInstances","node","style","removeProperty","checked","getComputedStyle","maxWidth","parseFloat","width","style2","setProperty","swapFont","families","ToggleSelector","STATUS_LABEL","internals","ns","selector","attr","toggle"],"mappings":";AAAA,MCCMA,EAAMC,OAAuB,KCCnC,MAAMC,UAAoBF,EAAIG,KAAKC,SACtBC,+BACT,MAAO,cAGLC,gBACF,OAAOC,KAAKC,aAAa,YCL7B,MAAMC,UAA0BT,EAAIG,KAAKC,SAC5BC,+BACT,MAAO,oBAGTK,OACEH,KAAKI,SAAS,aAAaJ,KAAKK,aAAa,WAAYV,GACzDK,KAAKM,SACLN,KAAKO,gBAAiB,EAGpBC,YAEF,OAAOC,OAAOC,OAAOC,MAAMH,MAAO,CAChCF,OAFYN,KAEEM,OAAOM,KAFTZ,QAMZa,YACF,OAAOb,KAAKc,uBAAuB,eAAe,GAGpDR,SACEN,KAAKe,KAAKC,MAAMC,eAAe,yBAC/B,MAAMC,EAAUlB,KAAKa,MAAMd,UAErBiB,EAAQG,iBAAiBnB,KAAKe,KAAM,WAC1C,IAAIK,EAAWC,WAAWL,EAAMM,OAChCtB,KAAKa,MAAME,KAAKG,SAAWA,EAE3B,MAAMK,EAASJ,iBAAiBnB,KAAKe,KAAM,WACrCO,EAAQD,WAAWE,EAAOD,OAC5BA,EAAQF,IAAUA,EAAWE,GACjCtB,KAAKa,MAAME,KAAKG,QAAUA,EAE1BlB,KAAKe,KAAKC,MAAMQ,YAAY,wBAA0BJ,EAAW,GAAM,OAGzEK,SAAUC,GACR1B,KAAKM,UCxCF,MAAMqB,EAAiB,CAC5BC,aAAc,GAAGnC,EAAIoC,UAAUC,GAAGC,SAAS,mBAAmBtC,EAAIoC,UAAUC,GAAGE,KAAKD,SAAS,mBAAmBtC,EAAIoC,UAAUC,GAAGE,KAAKD,SAAS,sBCEjJtC,EAAIwC,OAAS,CACX/B,kBAAmBA,EACnByB,eAAgBA,GCLlBlC,EAAIoC,UAAUzB,SAASX,EAAIwC,OAAON,eAAeC,aAAcnC,EAAIwC,OAAO/B"}