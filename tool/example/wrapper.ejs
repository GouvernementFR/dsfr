<%
let sampling = false;

function section (title, desc, spacing = '32v') {
  let sectionText = `<div class="fr-mt-${spacing}">`;
  if (title) sectionText += `<h3>${title}</h3>`;
  if (desc) sectionText += `<p>${desc}</p>`;
  sectionText += `</div>`;
  return sectionText;
}

locals.section = section;

function deprecation () {
  return section('Dépréciation', '<span class="fr-icon-warning-fill"></span> Les exemples suivants sont dépréciés, ne pas utiliser comme référence<br>Pour support des versions précédentes');
}

locals.deprecation = deprecation;

function getSample (include) {
  return (title, path, data, snippet, layout, layoutData) => {
    sampling = false;
    const cd = {...data};
    const sd = {...data};
    let component = include(path, JSON.parse(JSON.stringify(data)));

    if (locals.noSnippet) snippet = undefined;

    if (snippet === true) {
        sampling = true;
        let html =  include(path, JSON.parse(JSON.stringify(data)));
        sampling = false;
        html = beautify(html);

        html = html.replace(/(class=".*)\s(")/gm, '$1$2');
        html = html.replace(/&/g, '&amp;');
        html = html.replace(/</g, '&lt;');
        html = html.replace(/>/g, '&gt;');

        const accordion = {
            label: 'Extrait de code',
            id: uniqueId('snippet'),
            content: '<pre class=" language-html"><code>' + html + '</code></pre>'
        };

        snippet = include(root + 'src/component/accordion/template/ejs/accordion', {accordion: accordion});
    }

    if (layout === undefined) layout = root + 'tool/example/layout';
    if (layoutData === undefined) layoutData = {};


    return include(layout, {...layoutData, title: title, component: component, snippet: snippet});
  }
}

locals.getSample = getSample;

const lorem = (insert, length) => {
  let content = 'Lorem ';
  content += sampling ? '[...] ' : 'ipsum dolor sit amet, consectetur ';
  content += !sampling || insert ? 'adipiscing, ' : '';
  content += insert ? insert + ' ' : '';
  content += !sampling || insert ? 'incididunt, ' : '';
  content += !sampling ? 'ut labore et dolore magna aliqua. Vitae sapien pellentesque habitant morbi tristique senectus et. Diam maecenas sed enim ut. Accumsan lacus vel facilisis volutpat est. Ut aliquam purus sit amet luctus. Lorem ipsum dolor sit amet consectetur adipiscing ' : insert ? '[...] ' : '';
  content += 'elit ut.';

  return content.substring(0, length);
}

locals.lorem = lorem;

locals.contentPlaceholder = (text) => {
  if (text === 'alt') text = 'texte alternatif de l’image';
  return `[À MODIFIER - ${text}]`;
};

locals.lengthen = (length, label) => {
    switch (length) {
        case 1:
            return label + ' long';

        case 2:
            return label + ' plus long';

        case 3:
            return label + ' beaucoup plus long';

        default:
            return label;
    }
}

locals.imgAltText = 'texte alternatif de l’image';

const imgData = (src, alt, comment, style) => {
  const data = {
      src: `${relativeRoot}example/${src ? src : 'img/placeholder.16x9.png'}`,
      alt: alt,
      comment: comment,
      style: style
  };
  return data;
}

locals.imgData = imgData;

const vidData = (src, title, attributes) => {
    const data = {
        src: src || 'https://www.youtube.com/embed/HyirpmPL43I',
        title: title || 'Titre de l\'iframe',
        attributes: {
            allow:'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture',
            allowfullscreen:'',
            ...attributes
        }
    };
    return data;
}

locals.vidData = vidData;

const randomContent = (id) => {
  let content = '<!-- données de test -->';
  if (sampling) return content;
  content += `<div><h4 class="${prefix}-h4" >Contenu ${id || ''}</h4>`;
  if (Math.random() < .4) content += include(root + 'src/core/template/ejs/media/responsive-img.ejs', {media: imgData()});
  for (let i = Math.random() * 2; i > 0; i--) content += `<p>${lorem('<a href="test" target="_blank">link test</a>')}</p>`;
  content += '<ul>';
  for (let i = Math.random() * 2 + 1; i > 0; i--) {
    content += '<li>list item';
    if (Math.random() < .4) {
      content += '<ul>';
      for (let j = Math.random() * 2 + 1; j > 0; j--) content += '<li>list item niveau 2</li>';

      content += '</ul>';
    }
    content += '</li>';
  }
  content += '</ul></div>';
  return content;
};

locals.randomContent = randomContent;

if (locals.prepend === true) { %>
<%- include(`${root}/${path}/example/prepend.ejs`) %>
<% } %>

<% if (!locals.noHeading) { %>
<%- include('heading'); %>
<% } %>

<%- include(`${root}/tool/example/element.ejs`) %>

